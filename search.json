{"entries":[{"title":"materliu's Tech Blog","url":"/about.html","date":null,"categories":[],"body":"Hi, I have built websites for funny and have held full time development jobs     in Tencent&xiaomi as well. I like creating software because I've always dreamed of being an inventor and solving problems.  Software lets me carry out that dream in a small way and perhaps someday in a big way. You may email me: materliu [at!] gmail [dot!] com"},{"title":"materliu's Tech Blog","url":"/blogs.html","date":null,"categories":[],"body":""},{"title":"Code Posts in materliu's Tech Blog","url":"/code.html","date":null,"categories":[],"body":""},{"title":"materliu's Tech Blog","url":"/life.html","date":null,"categories":[],"body":"Curious About Me? "},{"title":"Software posts in materliu's Tech Blog","url":"/tencent.html","date":null,"categories":[],"body":""},{"title":"PGError Unable to connect on port 5432","url":"/all/web/2011/09/16/pgerror-unable-to-connect-on-port-5432.html","date":"2011-09-16 00:00:00 +0800","categories":["all","web"],"body":"16 Sep 2011  \tI've been bit by this a few times recently and I think this time I understand it.   \tI use homebrew to install postgresql and it usually just works. I think what has happened to me is sometimes when my machine is not gracefully shut down the .pid file doesn't get removed and keeps postgres from launching on its own. My .pid is located here: /usr/local/var/postgres/postmaster.pid. Just make sure postgres is not running, remove the file, and launch it again. "},{"title":"Prose Io","url":"/all/web/2013/06/13/prose-io.html","date":"2013-06-13 00:00:00 +0800","categories":["all","web"],"body":"This is a jekyll blog. I'm composing this post at  prose.io. I'm not even sure if I'm doing it correctly but if you are reading this I eventually figured it out. Prose lets you auth with github and edit your content. It's a little bit like working in a CMS like wordpress but with all the benefits of a statically generated site. I  suppose once I save and publish this post it'll get commited to my repository and the jekyll site generation will happen. Here goes nothing... Ok, I clicked \"Unpublished\" and it changed to \"Published\" - I checked github and didn't see anything - then I clicked the icon of the floppy disk to save. It prompted me for a commit message and now I see it on github."},{"title":"破解软件，软件配置信息，配色方案,常用小软件","url":"/all/web/ideas/2014/02/25/keygen.html","date":"2014-02-25 00:00:00 +0800","categories":["all","web","ideas"],"body":"alfred2.1.1 photoshopcs6 数据库连接软件Navicat-part1 Premium  数据库连接软件Navicat-part1 Premium Camtasia2.6.02 - part1  Camtasia2.6.02 - part2 win8 toolkit win8.1 activator xshell 配色方案 visualstudio visual studio配色方案 visualstudio visual studio vim插件 windows平台下查看端口占用 cports 小巧shh工具 putty 自己编写的获取用户当前dns等信息的脚本 win快速切换本地不同的hosts 计算文件的md5值 win 监控所有进程的详细信息processMonitor processmonitor process monitor Dash 2.0.2 这个分享是Dash的破解，可以自行在App Store下载最新版本的Dash，然后将Dash.app/Contents/MacOS/Dash这个Unix可执行文件用下载的这个文件替换掉。然后再启动程序就会发现已经破解了。10.9.2，Dash2.0.2亲测有效！！替换那个Dash二进制文件后记得chmod -R 0777 更改权限，要不那个二进制文件没法执行的。 path finder v6.4.5 mac finder的加强工具, 使用时需要先path， 再generate mac acdsee pro 3.5.144 mac Mindjet MindManager思维导图软件"},{"title":"windows cmd 命令行 加强工具","url":"/all/web/ideas/2014/02/27/cmd.html","date":"2014-02-27 00:00:00 +0800","categories":["all","web","ideas"],"body":"我自己现在在用powercmd， 但是很多时候感觉powercmd运行很卡，很慢。 自己也使用过colorconsole，感觉也还行，[colorconsole下载地址] (/attachments/2014-04-27-ColorConsole.exe)"},{"title":"2014-03-11-使用github_jekyll_pages经验谈.md","url":"/all/web/ideas/2014/03/11/github-jekyll-pages-experiences.html","date":"2014-03-11 00:00:00 +0800","categories":["all","web","ideas"],"body":"初次使用我们会发现很多时候，本地成功编译的项目，到了github上就会报错，这是因为： Jekyll中默认的markdown渲染器是maruku，但是它对Latex公式和中文支持都不太好, 通常是根据不同的需要选择其它几种渲染器（rdiscount，kramdown，redcarpet等），它们各有利弊。 Github在后台则选用了Redcarpet作为其文本渲染器，因为它安全性高且性能卓越，同时它在基本Markdown语法的基础上增加了一些自己的特性。 Kramdown是这几个当中对基础 Markdown语法拓展最多，也是最方便使用的1（但是跟Pandoc相比，还是差得很远）。 笔者之前一直是使用rdiscount，结果在本地编译没问题的代码在Github上就是无法通过，折腾了半天知道Github上的rdiscount是1.6.8版本，而本地rdiscount是2.1.6版本。下降版本后发现rdiscount1.6.8版本不支持注脚语法。使用低版本就无法使用注脚，使用高版本就无法在Github上编译通过 github官网也给出了让本地环境与服务器一致的方法： https://help.github.com/articles/using-jekyll-with-pages#installing-jekyll 参照里边的步骤来就可以了 但是在公司64位windows上安装的时候还是遇到了一些问题 代理问题   在命令行窗中   set http_proxy=*****:8080 直接bundle install 报错 Make sure thatgem install RedCloth -v '4.2.9'succeeds before bundling. 首先需要安装 RedCloth 报错 Please update your PATH to include build tools or download the DevKi from 'http://rubyinstaller.org/downloads' and follow the instruction at 'http://github.com/oneclick/rubyinstaller/wiki/Development-Kit' 解决方法 gem install RedCloth --platform=mswin32 如果经历了上边两步还是不行的话，就需要安装devkit了  按照上边第一步中给出的地址，指引安装。  但是在运行 ruby dk.rb install 的时候可能会报错：  Invalid configuration or no Rubies listed. Please fix 'config.yml' and rerun 'ruby dk.rb install'  在devkit的目录中找到 config.yml文件， 在其中加入一行 - d:/Ruby200-x64 就是你ruby的所在目录  重新运行 ruby dk.rb install 重回项目目录，运行 bundle install bundle exec jekyll serve 在本机跑jekyll的时候发现遇到了新的问题 invalid byte sequence in GBK. Use --trace to view backtrace  解决方案：  编辑 E:\\Ruby200\\lib\\ruby\\gems\\2.0.0\\gems\\jekyll-1.0.3\\lib\\jekyll目录下的convertible.rb文件 你可以搜索convertible.rb文件 修改配置文件之类的 建议先备份一下 这里不备份没事的哈 因为修改很简单 在大概第31行（你可以搜索File.read）的位置处将self.content = File.read(File.join(base, name))改为self.content = File.read(File.join(base, name),:encoding=>\"utf-8\")   新版的可以通过配置文件配置编码了，已经。在新版本的jeky中已经能够支持在_config.yml中配置编码了encoding: utf-8 Generating... You are missing a library required for Textile. Please run:...  $ [sudo] gem install RedCloth  Conversion error: There was an error converting 'all/web/_posts/2008-04-12-rails-shock.textile/#excerpt'.  实际上我本地已经成功安装了 RedCloth  没找到解决方案， 但看stackoverflow上一篇文章说： redcloth还不支持ruby2.0 但这个问题中也有另一个回答者给了一个解决方案， 我没有尝试  所以删除了项目中所有的 .textile 文件 Generating... error: Invalid argument - E:/workspace/idea/materliu.github.io/_site/E:. Use --trace to view backtrace  解决方案：  stackoverflow上有人回答了这个问题  似乎是jekyll 1.4.3的问题， 换用1.4.2即可  gem uninstall jekyll  gem install jekyll --version \"=1.4.2\"  这样就导致不能用 bundle里边的方式bundle exec jekyll serve了，因为其中用的是 jekyll 1.4.3  只能本地 jekyll serve 本地运行之后，windows机器如果文件名中包含中文，则会出现访问的时候  Internal Server Error  \"\\xA3\\x85\" from GBK to UTF-8  或者 找不到的错误， 尝试一下午搜索，自己动手，都没有找到解决方案  最后放弃，采用规避的方式，在文件名中不要使用中文， title中随便你用中文。 本地运行， 如果 --watch 的话还会报错 ruby/2.0.0/rubygems/core_ext/kernel_require.rb:45:in `require'  解决方法：这是1.4.2的一个bug， 安装jekyll的稳定版 1.2.1  ~ $ gem uninstall jekyll  ~ $ gem install jekyll --version(=\"1.2.1\")  但是安装了这个版本就有回到了1的问题， 需要按照其中的方法修改 对于layout中的引用，jekyll的template使用的是liquid语法， 访问地址    wiki地址 在修改layout文件的过程中， 我使用了 liquid 的 split filter， 发现它的wiki文档上给的例子是错误的， split 后边跟的参数需要是 ''括起来的， 已帮助其修改wiki。 页面中的代码高亮我使用了 SyntaxHighlighter 这一单独的js文件 访问地址 用法也相当简单： 在layouts文件中的html文件，添加对css的引用： 同时还有对js的应用： 在markdown中的写法就成了"},{"title":"2014-03-11-基于web网页视频播放常见问题","url":"/all/web/mobile/2014/03/11/%E5%9F%BA%E4%BA%8Eweb%E7%BD%91%E9%A1%B5%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html","date":"2014-03-11 00:00:00 +0800","categories":["all","web","mobile"],"body":"我们再来细细的说一说这个问题，我们先来解释下什么是HTML5。HTML5是用于取代1999年所制定的 HTML 4.01 和 XHTML 1.0 标准的 HTML（标准通用标记语言下的一个应用）标准版本；现在仍处于发展阶段，但大部分浏览器已经支持某些 HTML5 技术。HTML5播放视频，使用的是HTML5标准里的 video 标签，基本用法查看这里，更高级的接口定义请参阅W3C规范文档。 由于Video是HTML5规范里新增的标签，那么一定要浏览器能解析Video标签，否则肯定无法使用HTML5。 那么单单能解析HTML5的Video标签是否就能这个正常播放呢？视频是经过编码的，编码格式是H.264视频格式。所谓编码，其实就是一种压缩算法，要压缩，那么一定要解压缩，视频格式的解压缩就是解码，如果浏览器本身无法对视频文件进行解码，那么同样播放不出来。 所以综上，视频播放必须要满足上述两个条件，缺一不可。 看过问题1，我们知道安卓播放跟厂商支持情况有关，其实前端JS这边对VIDEO标签的解析和H264的解码做不了什么实质的事情，我们只能尽量使用html5的API接口找到hack各种设备的方案，但关键还是看厂商支持情况，所以要在前端实现适配难度很大。 安卓由于严重的系统碎片化问题，导致不同的厂商、不同的浏览器对上述两种条件的支持各不相同，所以安卓没法简单的说到底是否支持HTML5播放，甚至同一个厂商的不同机型，其特点都不一样，我们遇到过单独支持flash的，单独支持html5的，或者二者都支持的，甚至还有都不支持的，另外还有明明实际上能使用HTML5播放但API又返回说不支持播放的。对此我们针对不同的Android设备和浏览器做了些矫正和强制判断，许多问题需要Case by Case去解决。 其实还有个方案，就是MP4链接的形式，我们称之为MP4Link?，如下图：  这个看起来像个播放器，其实我们只是在播放区域放了一张长得像播放器的静态图片，在图片上我们设置了链接，指向到视频MP4文件，用户点击”播放按钮“（实际点击的是图片链接），触发浏览器本身的特性，会自动打开MP4文件，这个时候有些浏览器会自动调用设备默认的视频播放器，或者会问用户，当前是要下载还是要播放。 这个图片的真实DOM结构是： 统一播放器是如何选择当前设备应该用什么内核的播放器呢？ 统一播放器在移动设备的判断流程如下图：  ios设备除Mac系统以外都在html5 PC设备，含Mac系统都走flash Android设备低于4.0都走flash Android4.0以上系统会做些矫正，QQ手机浏览器3.×版本和Firefox浏览器使用MP4链接。微信4.2以上版本、MIUI原生浏览器实际是支持HTML5但JS API返回不支持，这里做了矫正强制使用HTML5。其他浏览器根据canPlayType接口判断是否支持H.264解码，支持则使用HTML5，否则使用Flash. 移动设备能在网页里播放直播吗？ ios的HTML5直播是使用HLS技术，该技术只有ios系统才支持，所以用chrome、safari修改userAgent模拟是看不到效果的，可能会黑屏。 安卓手机基本不支持HLS，则只能使用flash播放直播，如果您使用的安卓设备不支持flash（能安装flash跟支持flash是两回事），则无法播放直播节目。 那么对于安卓这个问题该怎么解决？好消息是，安卓的手机QQ浏览器4.2版本开始原生支持HLS，使用手机QQ浏览器就能播放直播，遇到这个问题，我们建议是引导用户使用手机QQ浏览器。那么如果你是自己App里内嵌WebView?，希望支持直播，那么要么搞定flash，要么搞定HLS，或者直接找wwjs要腾讯视频适合安卓的SDK开发包。 那有没有办法突破呢？经过我们测试，部分iPhone设备，可以先调用video.pause()，然后再调用video.play()接口可以实现自动播放，但仅仅是部分设备有效，而且是同样的机型、同样的系统版本、同样的设置，有些机器可以有些无效，初步估计可能跟越狱有关，但还不完全确认。 安卓设备上目前还没发现可以自动播放的情况。 如果你不是在普通浏览器上使用统一播放器，而是自己的webview，那么其实可以在调用webview的时候设置几个属性，就可以打开视频的自动播放功能： 微信是已经实现了自动播放接口，但需要根据域名申请权限，默认是禁止的，申请权限请联系微信的同学。 移动设备能通过接口调整音量吗？ 这个系统限制了，不能通过接口去修改音量，移动设备其实用户很方便的使用手机侧面调整音量大小。 为此，apple对限制接口做过解释：https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html 系统全屏和伪全屏的区别和使用场景 首先，先明确下系统全屏和伪全屏的区别。 为什么有伪全屏的场景？有以下几个原因： 1. 系统全屏无法满足需求，比如需要在全屏的时候展示视频标题、App下载按钮、清晰度切换等 2. 规避系统全屏的bug，我们已知有如下几个场景： 可能还有我们未知的全屏问题，所以为了规避系统全屏的bug，我们可以伪全屏的形式实现。 那么是不是任何场景或者设备都能实现伪全屏呢？ 网页要使用伪全屏要做什么工作？ 伪全屏，本质是用CSS修改播放器的width、height、left、top、zindex、position等样式参数，那么自然可能会影响网页其他元素的展现，也会受到网页元素的影响，例如会被网页里更高层级的div遮挡，收到body或者父容器的margin padding等影响。播放器本身的逻辑只能放大播放器，对于页面元素是否要做些调整（比如将遮挡播放器的元素暂时隐藏）就需要页面响应播放器的onfullscreen事件来写一些页面逻辑的代码做配合了。 iPhone、iPod全屏播放样式能修改吗？ iPhone、iPad播放视频是使用的系统全屏，见问题9的详细说明，系统全屏是系统接管，是调用的系统播放器实现的播放，所以前端不能修改其样式和表现。"},{"title":"2014-03-16-推荐五款流行的JavaScript模板引擎.md","url":"/all/web/2014/03/16/%E6%8E%A8%E8%8D%90%E4%BA%94%E6%AC%BE%E6%B5%81%E8%A1%8C%E7%9A%84JavaScript%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E.html","date":"2014-03-16 00:00:00 +0800","categories":["all","web"],"body":"当你创建JavaScript应用时，你必然会用到JavaScript模板。当对HTML进行更新时，你可使用模板来代替库（如jQuery），使用模板可以大大简化你的代码。该文将例举当前较流行的一些模板库。 1.Mustache  Mustache通常被称为JavaScript模板的基础。另一个流行的解决方案Hanldebars实际上就是基于Mustache构建而成的。这并不意味着Mustache是一个不好的模板解决方案。下面例举一例： 一旦在页面中包含了Mustache，你就可以访问全局对象“Mustache”。你可使用其中最主要的方法“render”，它包含两个参数。首个参数是实际的模板，第二个参数则为需要传入的参数值。 上例中，你可以看见“”。其中的“”实际上为Mustache的语法，表示一个占位符。当Mustache对其进行编译时，它将在传入的对像中寻找“name”属性，并用该属性的值（该例中为“Jack”）来代替“”。 在这里，模板只为一个字符串，但如果你有一个更复杂的模板，该方法可能就不适用了。通常的解决方案是将模板放在“script”标签中： Hello, Jack 给“script”一个浏览器无法理解的“type”属性，浏览器就会忽略该Script，不将它作为JavaScript，也不会执行它。 你也可在模板中使用循环，如下面这个模板： 传递数据： 你将得到“JackFred”字符串。 2.Underscore Templates ...... 详细信息参考 原文内容 在我们的项目中，我们重点使用了jade和handlebars， 请关注另外两篇博文 2014/03/17/在项目中使用预编译jade模板.html 2014/03/17/在项目中使用预编译handlebars模板.html"},{"title":"2014-03-17-在项目中使用预编译handlebars模板.md","url":"/all/web/2014/03/17/%E5%9C%A8%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%A2%84%E7%BC%96%E8%AF%91handlebars%E6%A8%A1%E6%9D%BF.html","date":"2014-03-17 00:00:00 +0800","categories":["all","web"],"body":"如果对js模板不是很清楚的同学可以参考： 推荐五款流行的JavaScript模板引擎 下边切入正文： handlebars官网 我们这里假设你已经使用grunt完成了你的web项目的开发流程自动化。 关于为什么需要做javascript模板的预编译? 可以参考1 可以参考2 下边来说一下具体的操作步骤： 在script目录下新建目录template，内置两个目录handlebars/handlebars-generated handlebars，比如：noresult-tips.hsb handlebars-generated 目录内存放自动编译handlebars生成的 client js template 文件。 配置grunt handlebars 修改grunt配置文件   说一下几个参数各自的含义： namespace： 将handlebars模板编译成client-side使用的js模板函数的window下的命名空间 processName: 生成的预编译模板对象的索引key 在js文件中如何使用： 首先需要引入handlebars的运行时文件，下载地址 使用handlebars有时候我们需要自定义一些helper，具体参见handlebars的官网,所以我们单独新建一个helper js文件 引入通过grunt-contrib-handlebars生成的js模板文件 在逻辑js中的调用方法是：   在logic.js 里边的调用： 模板文件中如何访问上一级参数, resultList 和 PLATFORM 为同级参数， 使用each 进入了resultList各个子项， 需要使用 ../ 返回上一级"},{"title":"2014-03-17-在项目中使用预编译jade模板.md","url":"/all/web/2014/03/17/%E5%9C%A8%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%A2%84%E7%BC%96%E8%AF%91jade%E6%A8%A1%E6%9D%BF.html","date":"2014-03-17 00:00:00 +0800","categories":["all","web"],"body":"如果对js模板不是很清楚的同学可以参考： 推荐五款流行的JavaScript模板引擎 下边切入正文： jade官网 最初jade是为nodejs设计的html模板，但是html模板不能服役于纯前端的项目将是一件非常遗憾的事情，这里我们就来谈一谈如何让jade服役于纯前端项目。 我们这里假设你已经使用grunt完成了你的web项目的开发流程自动化。 关于为什么需要做javascript模板的预编译? 可以参考1 可以参考2 下边来说一下具体的操作步骤： 在script目录下新建目录template，内置两个目录jade/jade-generated jade目录下存放编写的jade模板文件，比如：noresult-tips.jade jade-generated 目录内存放自动编译jade生成的 client js template 文件。 配置grunt jade任务 修改grunt配置文件   说一下几个参数各自的含义： client： 将jade模板编译成client-side使用的js模板函数，而不是html文件； processName: 生成的预编译模板对象的索引key 在js文件中如何使用： 首先需要引入jade的运行时文件，下载地址 引入通过grunt-contrib-jade生成的js文件 在逻辑js中的调用方法是：   在logic.js 里边的调用： 说一件在手Q查找中遇到的非常奇葩的事情，在android2.3低端机上， 使用jade生成的js模板文件根本就不执行， 一直到我换用handlebars模板引擎，我也没有找到问题所在，最后放弃，如果有知道原因的朋友，欢迎不吝赐教啊。"},{"title":"2014-03-21-retina屏幕下1px宽border实现方案.md","url":"/all/web/mobile/2014/03/21/retina%E5%B1%8F%E5%B9%95%E4%B8%8B1px%E5%AE%BDborder%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88.html","date":"2014-03-21 00:00:00 +0800","categories":["all","web","mobile"],"body":"http://n12v.com/css-retina-and-physical-pixels/"},{"title":"2014-03-26-20个实用的webApp前端开发技巧.md","url":"/all/web/2014/03/26/20-Useful-Docs-and-Guides-for-Front-End-Developers.html","date":"2014-03-26 00:00:00 +0800","categories":["all","web"],"body":"外文原址： http://www.sitepoint.com/20-docs-guides-front-end-developers/"},{"title":"2014-03-26-20个实用的webApp前端开发技巧.md","url":"/all/web/2014/03/26/20%E4%B8%AA%E5%AE%9E%E7%94%A8%E7%9A%84webApp%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7.html","date":"2014-03-26 00:00:00 +0800","categories":["all","web"],"body":"自Iphone和Android这两个牛逼的手机操作系统发布以来，在互联网界从此就多了一个新的名词-WebApp(意为基于WEB形式的应用程序，运行在高端的移动终端设备)。 开发者们都知道在高端智能手机系统中有两种应用程序：一种是基于本地（操作系统）运行的APP；一种是基于高端机的浏览器运行的WebApp，本文将主要讲解后者。 WebApp与Native App有何区别呢？ Native App： 1、开发成本非常大。 一般使用的开发语言为JAVA、C++、Objective-C。 2、更新体验较差、同时也比较麻烦 每一次发布新的版本，都需要做版本打包，且需要用户手动更新（有些应用程序即使不需要用户手动更新，但是也需要有一个恶心的提示）。 3、非常酷 因为native app可以调用IOS中的UI控件以UI方法，它可以实现WebApp无法实现的一些非常酷的交互效果 4、Native app是被Apple认可的 Native app可以被Apple认可为一款可信任的独立软件，可以放在Apple Stroe出售，但是Web app却不行。 Web App： 1、开发成本较低 使用web开发技术就可以轻松的完成web app的开发 2、升级较简单 升级不需要通知用户，在服务端更新文件即可，用户完全没有感觉 3、维护比较轻松 和一般的web一样，维护比较简单，它其实就是一个站点 Webapp说白了就是一个针对Iphone、Android优化后的web站点，它使用的技术无非就是HTML或HTML5、CSS3、JavaScript，服务端技术JAVA、PHP、ASP。 当然，因为这些高端智能手机（Iphone、Android）的内置浏览器都是基于webkit内核的，所以在开发WEBAPP时，多数都是使用HTML5和CSS3技术做UI布局。当使用HTML5和CSS3l做UI时，若还是遵循着一般web开发中使用HTML4和CSS2那样的开发方式的话，这也就失去了WEBAPP的本质意义了，且有些效果也无法实现的，所以在此又回到了我们的主题–webapp的布局方式和技术。 在此所说的移动平台前端开发是指针对高端智能手机（如Iphone、Android）做站点适配也就是WebApp，并非是针对普通手机开发Wap 2.0，所以在阅读本篇文章以前，你需要对webkit内核的浏览器有一定的了解，你需要对HTML5和CSS3有一定的了解。如果你已经对此有所了解，那现在就开始往下阅读吧…… 1、首先我们来看看webkit内核中的一些私有的meta标签，这些meta标签在开发webapp时起到非常重要的作用 1  2  3  4  第一个meta标签表示：强制让文档的宽度与设备的宽度保持1:1，并且文档最大的宽度比例是1.0，且不允许用户点击屏幕放大浏览； 第二个meta标签是iphone设备中的safari私有meta标签，它表示：允许全屏模式浏览； 第三个meta标签也是iphone的私有标签，它指定的iphone中safari顶端的状态条的样式； 第四个meta标签表示：告诉设备忽略将页面中的数字识别为电话号码 2、HTML5标签的使用 在开始编写webapp时，哥建议前端工程师使用HTML5，而放弃HTML4，因为HTML5可以实现一些HTML4中无法实现的丰富的WEB应用程序的体验，可以减少开发者很多的工作量，当然了你决定使用HTML5前，一定要对此非常熟悉，要知道HTML5的新标签的作用。比如定义一块内容或文章区域可使用section标签，定义导航条或选项卡可以直接使用nav标签等等。 3、放弃CSS float属性 在项目开发过程中可以会遇到内容排列排列显示的布局(见下图)，假如你遇见这样的视觉稿，哥建议你放弃float，可以直接使用display:block; 4、利用CSS3边框背景属性 这个按钮有圆角效果，有内发光效果还有高光效果，这样的按钮使用CSS3写是无法写出来的，当然圆角可以使用CSS3来写，但高光和内发光却无法使用CSS3编写，这个时候你不妨使用-webkit-border-image来定义这个按钮的样式。-webkit-border-image就个很复杂的样式属性。 5、块级化a标签 请保证将每条数据都放在一个a标签中，为何这样做？因为在触控手机上，为提升用户体验，尽可能的保证用户的可点击区域较大。 6、自适应布局模式 在编写CSS时，我不建议前端工程师把容器（不管是外层容器还是内层）的宽度定死。为达到适配各种手持设备，我建议前端工程师使用自适应布局模式（支付宝采用了自适应布局模式），因为这样做可以让你的页面在ipad、itouch、ipod、iphone、android、web safarik、chrome都能够正常的显示，你无需再次考虑设备的分辨率。 7、学会使用webkit-box 上一节，我们说过自适应布局模式，有些同学可能会问：如何在移动设备上做到完全自适应呢？很感谢webkit为display属性提供了一个webkit-box的值，它可以帮助前端工程师做到盒子模型灵活控制。 8、如何去除Android平台中对邮箱地址的识别 看过iOS webapp API的同学都知道iOS提供了一个meta标签:用于禁用iOS对页面中电话号码的自动识别。在iOS中是不自动识别邮件地址的，但在Android平台，它会自动检测邮件地址，当用户touch到这个邮件地址时，Android会弹出一个框提示用户发送邮件，如果你不想Android自动识别页面中的邮件地址，你不妨加上这样一句meta标签在head中1  9、如何去除iOS和Android中的输入URL的控件条 你的老板或者PD或者交互设计师可能会要求你：能否让我们的webapp更加像nativeapp，我不想让用户看见那个输入url的控件条？ 答案是可以做到的。我们可以利用一句简单的javascript代码来实现这个效果 1 setTimeout(scrollTo,0,0,0); 请注意，这句代码必须放在window.onload里才能够正常的工作，而且你的当前文档的内容高度必须是高于窗口的高度时，这句代码才能有效的执行。 10、如何禁止用户旋转设备 我曾经也想禁止用户旋转设备，也想实现像某些客户端那样：只能在肖像模式或景观模式下才能正常运行。但现在我可以很负责任的告诉你：别想了!在移动版的webkit中做不到！ 至少Apple webapp API已经说到了：我们为了让用户在safari中正常的浏览网页，我们必须保证用户的设备处于任何一个方位时，safari都能够正常的显示网页内容（也就是自适应），所以我们禁止开发者阻止浏览器的orientationchange事件，看来苹果公司的出发点是正确的，苹果确实不是一般的苹果。 iOS已经禁止开发者阻止orientationchange事件，那Android呢？对不起，我没有找到任何资料说Android禁止开发者阻止浏览器orientationchange事件，但是在Android平台，确实也是阻止不了的。 11、如何检测用户是通过主屏启动你的webapp 看过Apple webapp API的同学都知道iOS为safari提供了一个将当前页面添加主屏的功能，按下iphoneipodipod touch底部工具中的小加号，或者ipad顶部左侧的小加号，就可以将当前的页面添加到设备的主屏，在设备的主屏会自动增加一个当前页面的启动图标，点击该启动图标就可以快速、便捷的启动你的webapp。从主屏启动的webapp和浏览器访问你的webapp最大的区别是它清除了浏览器上方和下方的工具条，这样你的webapp就更加像是nativeapp了，还有一个区别是window对像中的navigator子对象的一个standalone属性。iOS中浏览器直接访问站点时，navigator.standalone为false,从主屏启动webapp时，navigator.standalone为true， 我们可以通过navigator.standalone这个属性获知用户当前是否是从主屏访问我们的webapp的。在Android中从来没有添加到主屏这回事！ 12、如何关闭iOS中键盘自动大写 我们知道在iOS中，当虚拟键盘弹出时，默认情况下键盘是开启首字母大写的功能的，根据某些业务场景，可能我们需要关闭这个功能，移动版本webkit为input元素提供了autocapitalize属性，通过指定autocapitalize=”off”来关闭键盘默认首字母大写。 13、iOS中如何彻底禁止用户在新窗口打开页面 有时我们可能需要禁止用户在新窗口打开页面，我们可以使用a标签的target=”_self“来指定用户在新窗口打开，或者target属性保持空，但是你会发现iOS的用户在这个链接的上方长按3秒钟后，iOS会弹出一个列表按钮，用户通过这些按钮仍然可以在新窗口打开页面，这样的话，开发者指定的target属性就失效了，但是可以通过指定当前元素的-webkit-touch-callout样式属性为none来禁止iOS弹出这些按钮。这个技巧仅适用iOS对于Android平台则无效。 14、iOS中如何禁止用户保存图片＼复制图片 我们在第13条技巧中提到元素的-webkit-touch-callout属性，同样为一个img标签指定-webkit-touch-callout为none也会禁止设备弹出列表按钮，这样用户就无法保存＼复制你的图片了。 15、iOS中如何禁止用户选中文字 我们通过指定文字标签的-webkit-user-select属性为none便可以禁止iOS用户选中文字。 16、iOS中如何获取滚动条的值 桌面浏览器中想要获取滚动条的值是通过document.scrollTop和document.scrollLeft得到的，但在iOS中你会发现这两个属性是未定义的，为什么呢？因为在iOS中没有滚动条的概念，在Android中通过这两个属性可以正常获取到滚动条的值，那么在iOS中我们该如何获取滚动条的值呢？ 通过window.scrollY和window.scrollX我们可以得到当前窗口的y轴和x轴滚动条的值。 17、如何解决盒子边框溢出 当你指定了一个块级元素时，并且为其定义了边框，设置了其宽度为100％。在移动设备开发过程中我们通常会对文本框定义为宽度100％，将其定义为块级元素以实现全屏自适应的样式，但此时你会发现，该元素的边框(左右)各1个像素会溢了文档，导致出现横向滚动条，为解决这一问题，我们可以为其添加一个特殊的样式-webkit-box-sizing:border-box;用来指定该盒子的大小包括边框的宽度。 18、如何解决Android 2.0以下平台中圆角的问题 如果大家够细心的话，在做wap站点开发时，大家应该会发现android 2.0以下的平台中问题特别的多，比如说边框圆角这个问题吧。 在对一个元素定义圆角时，为完全兼容android 2.0以下的平台，我们必须要按照以下技巧来定义边框圆角： 1＼-webkit这个前缀必须要加上（在iOS中，你可以不加，但android中一定要加）； 2＼如果对针对边框做样式定义，比如border:1px solid #000;那么-webkit-border-radius这属性必须要出现在border属性后。 3＼假如我们有这样的视觉元素，左上角和右上角是圆角时，我们必须要先定义全局的(4个角的圆角值)-webkit-border-radius:5px;然后再依次的覆盖左下角和右下角，-webkit-border-bottom-left-radius:0;-webkit-border-bottom-right-border:0;否则在android 2.0以下的平台中将全部显示直角，还有记住！-webkit这个前缀一定要加上！ 19、如何解决android平台中页面无法自适应 虽然你的html和css都是完全自适应的，但有一天如果你发现你的页面在android中显示的并不是自适应的时候，首先请你确认你的head标签中是否包含以下meta标签： 1  如果有的话，那请你再仔细的看清楚有没有这个属性的值width=device-width，如果没有请立即加上吧！ 20、如何解决iOS 4.3版本中safari对页面中5位数字的自动识别和自动添加样式 新的iOS系统也就是4.3版本，升级后对safari造成了一个bug：即使你添加了如下的meta标签，safari仍然会对页面中的5位连续的数字进行自动识别，并且将其重新渲染样式，也就是说你的css对该标签是无效的。 1  我们可以用一个比较龌龊的办法来解决。比如说支付宝wap站点中显示金额的标签，我们都做了如下改写： 1 95009.00"},{"title":"2014-03-26-idea_vcssvn_项目管理.md","url":"/all/web/2014/03/26/idea_vcssvn_%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86.html","date":"2014-03-26 00:00:00 +0800","categories":["all","web"],"body":"If you decide to share IDE project files with other developers, follow these guidelines: Directory based project format (.idea directory) This format is used by all the recent IDE versions by default. Here is what you need to share: All the files under .idea directory in the project root except the workspace.xml and tasks.xml files which store user specific settings All the .iml module files that can be located in different module directories (applies to IntelliJ IDEA) Be careful about sharing the following: Android artifacts that produce a signed build (will contain keystore passwords) dataSources.ids, datasources.xml (can contain database passwords) You may consider not to share the following: gradle.xml file, see this discussion user dictionaries folder (to avoid conflicts if other developer has the same name) XML files under .idea/libraries in case they are generated from Gradle project Legacy project format (.ipr/.iml/.iws files) Share the project .ipr file and all the .iml module files, don't share the .iws file as it stores user specific settings"},{"title":"2014-03-26-window.onError不是万能的.md","url":"/all/web/2014/03/26/window.onError%E4%B8%8D%E6%98%AF%E4%B8%87%E8%83%BD%E7%9A%84.html","date":"2014-03-26 00:00:00 +0800","categories":["all","web"],"body":"window.onError window.onerror是万能的吗？被设计成捕获一切运行时异常，事实告诉我们捕获是可以的， 但是在webkit内核下存在跨域js资源产生的错误无法定位 高居badJS排行榜的就包括这个问题 参考这篇文章 http://stackoverflow.com/questions/5913978/cryptic-script-error-reported-in-javascript-in-chrome-and-firefox"},{"title":"2014-03-27-FILE_UPLOAD_SUPPORT_ON_MOBILE.md","url":"/all/web/2014/03/27/FILE_UPLOAD_SUPPORT_ON_MOBILE.html","date":"2014-03-27 00:00:00 +0800","categories":["all","web"],"body":""},{"title":"2014-03-27-new_Image()上报存在缺陷.md","url":"/all/web/2014/03/27/new_Image%28%29%E4%B8%8A%E6%8A%A5%E5%AD%98%E5%9C%A8%E7%BC%BA%E9%99%B7.html","date":"2014-03-27 00:00:00 +0800","categories":["all","web"],"body":"目前,我们的数据统计基本上都在页面由js来完成,而js通常使用如下的代码的进行数据上报:new Image().src=\"http://......\" 这种用法在firefox下没有问题,但在ie下有问题. 如果js在执行该语句之后立即进行其它http请求,会导致该数据上报的http请求被中止(使用httpwatch,提示aborted).[注:这种情况的发生不是必现,有时也能上报成功]. 使用google和baidu搜索,没有找到权威的解释.我个人认为这可能是由于ie的处理http请求队列的策略导致.由于new Image创建的的Image DOM对象没有挂载到页面Body,请求该Image的数据对页面的展示没有任何的意义,ie在http请求忙的时候会主动中止这类请求.[敝人之见,欢迎大家讨论]. 解决的方案是把上面的代码改为: var objImg = new Image(); objImg.style.width = 0; objImg.style.height = 0; document.body.appendChild(objImg); objImg.src = \"http://............\""},{"title":"2014-03-30-web无障碍化整理贴.md","url":"/all/web/2014/03/30/web-accessibility.html","date":"2014-03-30 00:00:00 +0800","categories":["all","web"],"body":"国内读屏软件争渡 国外读屏软件NVDA 360浏览器插件开发页面提供的无障碍知识 alloyteam博客文章1 alloyteam博客文章2 朋友网的经验小结 讲解很多无障碍化实践的博客 QQ空间、腾讯网无障碍化的一些规范1 QQ空间、腾讯网无障碍化的一些规范2 QQ空间、腾讯网无障碍化的一些规范3 无障碍化的坑 以下都是QQ5.3客户端内的表现，使用的chrome29同样的webkit内核 * 争渡 对于a 标签 都能通过tab聚焦上去，读法是： a内容 + href里边的内容 如果href是### 那么读屏软件读的就是当前网页地址"},{"title":"2014-04-01-spy_js入门.md","url":"/all/web/2014/04/01/spy_js%E5%85%A5%E9%97%A8.html","date":"2014-04-01 00:00:00 +0800","categories":["all","web"],"body":"首先必须坦诚，在这之前我并没有听说过spy-js，还是对前沿技术关注度不够啊，稍一放松就落伍了。 这不看到 webstorm8 的新特性中多了一条对spy-js的支持， 赶紧来看看spy-js是个什么东东。 要知道， webstorm对新特性的支持，很多时候是紧贴前沿的！ 我们来看看spy-js的官网怎么说的， 为什么会有这个东西。 官网地址 首先了解到这作者是个老毛子，请允许我这样称呼，我们那边都这么叫，恩，就是老毛子。 瓜子我们叫毛嗑, 因为老毛子爱嗑。这哥们洋洋洒洒一大篇， 一眼扫过， 大概估计猜想是这样的： 这哥们写了一个spy-js， 然后就被intellij看上了， intellij 你知道的， 最牛逼的IDE厂商之一，对，就是那个让谷歌抛弃eclipse改投他的idea的intellij。 intellij就把这哥们给招了，现在webstorm对spy-js提供了非常好的支持，下边我们就絮叨絮叨。 (八卦贴) 查看当前页面中有哪些事件正在被触发, 查看这些事件的调用堆栈以及相关联的源代码片段 事件可过滤， 只需要关心需要监测的事件 查看事件调用的场景， 相关函数的传参， 返回值 完美兼容IE6， mobile 等执行环境 查看事件函数的耗时， 找到性能瓶颈 通过这种方式， 了解你并不熟悉的代码是如何执行的 (回头准备通过这种方式过一下requirejs的源码， 到时候放出相关资料) 讲如何使用之前，我们先来说一下spy-js的工作原理： spy-js启动之后，会在你的本地起一个服务器，然后把系统代理设置到这台服务器上， 所有从你机器上出去的请求都是通过这个服务器的， 当然从网络上回来的时候，也是通过这个服务器返回的。 在这个过程中， spy-js会向你的js中插入一些相关的打桩代码， 这时候你浏览器访问到的起始是已经被打桩修改过的js文件， 不过你不用担心， 这些打桩并不会影响js的逻辑执行。 你可以认为它是完全透明的。 下边进入正题， 讲如何使用。 在webstorm中打开相关项目， 菜单栏的run中选择Edit Configurations -> 添加 -> 选择 spy-js name, 不用多说了吧， 就是这项配置的名字， 给他起名如花吧。记住， 这里我们给这个run项起名如花。 node路径， server port 一般无需修改， 除非你的server port已经被其他程序占用 use  / Default Configuration | Configuration File 如果你是在调试，检测本地代码的话可以选择 Configuration File, 现在一般都用grunt集成了本地服务器，可以在项目根目录下放置一个 spy-config.js 文件， 里边的内容：   或者直接用默认配置， 对url进行拦截， 利用 grunt-localhost 和 grunt-connect-proxy 配合把 项目上线地址(比如说是 qun.qq.com) 配置到127.0.0.1, spy-js 配置直接拦截qun.qq.com/index.html 即可 。   使用全局配置的时候， 你在chrome里边访问，或者开着fiddler的情况下可能会发现捕获无效， 这是因为chrome没有走系统代理，检查chrome是否使用了proxy-switchysharp插件， 开着fiddler， 系统代理改变， fiddler不一定能立马捕获， ctrl+f12 取消fiddler代理，再ctrl+f12捕获一次即可。 Configuration 选择这个配置文件 Automatically configure system proxy 勾选上这个配置项 Show this page 勾选上的话，每次run 如花， 都会弹出这个配置窗口， 这就叫show this page 。 Before lanuch 在run 如花之前，是否需要执行其他的任务 启动本地服务器, 我在项目中集成了grunt, 直接在webstorm的grunt面板,启动grunt server 启动配置好的如花, 这时候直接在浏览器中访问 localhost:3000 就打开了本地webserver中的站点内容， webstorm中的run面板可以看到spy-js捕获的所有js事件。"},{"title":"2014-04-03-grunt_connect指定path.md","url":"/all/web/2014/04/03/grunt_connect%E6%8C%87%E5%AE%9Apath.html","date":"2014-04-03 00:00:00 +0800","categories":["all","web"],"body":"需求是这样的： 我们的页面是部署在域名 qun.qq.com/search/mobileqq/ 路径下的 而通过 yeoman 默认生成的项目是通过把 app 目录中的内容部署到 localhost/ 根目录下来进行server部署的。 那么如何把项目内容， app下的内容部署到 localhost/search/mobileqq/ 目录下呢？ 我搜了一下 grunt connect 似乎没有提供类似的配置接口， 懒得去修改它的代码， 所以用了一种变通的方式： 无非就是生成一个临时的mountserver目录， ./mountserver/search/mobileqq 然后把 app 目录中的内容拷贝到 这个临时目录中 connect 映射 .mountserver 目录 这是我在 stackoverflow 上的回答 项目Gruntfile.js下载 后来搜索发现有一个 grunt-connect-proxy 的插件非常好用，大家可以尝试使用！ 教程地址"},{"title":"2014-04-04-publish你自己的node_modules.md","url":"/all/web/ideas/2014/04/04/publish%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84node_modules.html","date":"2014-04-04 00:00:00 +0800","categories":["all","web","ideas"],"body":"为了迎合蛋疼的业务需求， 写了一个修改本地localhost的grunt插件， 具体内容见 说一下发布到官网npm库的流程 官方的npm注册地址是： http://registry.npmjs.org/ 首先访问http://www.npmjs.org, 注册一个你自己的账号。 然后在本地命令行中： npm adduser 把刚刚注册的账号根据命令行提示， 添加进去。 如果项目已经在github提交，接下来就非常方便了，这也是我推荐的方式： 所有github的项目都可以通过地址 https://codeload.github.com/materliu/grunt-localhosts/legacy.tar.gz/master  将你的项目master打包下载 注意修改 materliu/grunt-localhosts 为你的项目名 而npm publish 支持直接通过 项目的tar gz包地址 publish 命令： npm publish  [--tag ] npm publish https://codeload.github.com/materliu/grunt-localhosts/legacy.tar.gz/master --tag 0.0.1 后边 --tag 指定你要覆盖的版本， 不跟的话就是覆盖最新版 如果项目没有在github提交，publish命令为：npm publish  [--tag ] 简单的方式 直接进入当前 npm modules 项目所在目录  npm publish 搞定 注意点： 没有必要把你的npm用到的node_modules也上传到你的github上， 最后用户安装你的npm的时候， 是根据你的package.json文件中的 dependencies 里边指定的项来自动帮你安装的， 而不是根据你github里边上传了什么node_modules来的。"},{"title":"2014-04-08-compass自动合图报错.md","url":"/all/web/2014/04/08/compass%E8%87%AA%E5%8A%A8%E5%90%88%E5%9B%BE%E6%8A%A5%E9%94%99.html","date":"2014-04-08 00:00:00 +0800","categories":["all","web"],"body":"今天一个新加入查找开发的同事说自动化流程报错： 报错信息是：RangeError on line [\"87\"] of C: bignum too big to convert into 'long' 上网直接贴了一下这个信息， 发现是ruby在处理整型的时候可能报这个错， 想想查找中用到ruby的地方，瞬间锁定compass和sass 问： 做了什么修改吗？ 答： 修改了两张图片 问： 提交一下， 我看看 更新到我的本地，发现同样报错，看更新log， 只是在合图目录里边添加了两张png图片， 用看图软件打开两张图片也没有问题。 瞬间摸不着头脑了 我去！突然想到， 同事是不是直接把jpeg改成了png的后缀放进去，然后compass不能正确识别这种。 问： 是不是直接把jpeg改成了png的后缀放进去了？ 答： 是 so， 小伙伴们注意了。！"},{"title":"2014-04-09-chrome插件开发.md","url":"/all/web/2014/04/09/chrome_extensions_development.html","date":"2014-04-09 00:00:00 +0800","categories":["all","web"],"body":"最近用公司的管理后台用的实在是太过蛋疼，每次都要勾选很多选项，所以决定写一个chrome的插件，来帮我自动实现这些事情 首先上学习资料： 谷歌官网文档 为了快速的把项目搭建起来，首先想到的是 yeoman 脚手架有没有相关的generator, 搜了一下就找到了 generator-chrome-extension 迅速生成初始化项目, 在github上立项！"},{"title":"2014-04-10-TODO-迫切需要解决的问题.md","url":"/all/web/2014/04/10/TODO.html","date":"2014-04-10 00:00:00 +0800","categories":["all","web"],"body":"最近也有发现一个很诡异的uglify 问题， 还没有深入研究， 稍后研究一下提交一个issue。 gdt['504409777633088719'] 这种里边字符串索引会被压缩成一个16进制的 0x的数， 如果拿出来 var key = '504409777633088719'; gdt[key] 就不会有问题 lunr.js github访问地址 [官网] (http://lunrjs.com/)  看自己是否能搞个中文适配版出来   关于牛逼的搜索引擎 lucene， apache基于这个引擎已经写了一个server出来，叫做 solr 实验证明 input[type=search]的search事件，在ios4，手Q webview中是否会被触发两次， 而在外部浏览器中是否会被触发两次， 包括android和ios。"},{"title":"2014-04-10-老版本的chrome下载.md","url":"/all/web/ideas/2014/04/10/old-version-chrome-download.html","date":"2014-04-10 00:00:00 +0800","categories":["all","web","ideas"],"body":"老版本的chrome下载 chrome cache viewer下载地址"},{"title":"2014-04-13-intellij_idea_svn哪些文件应该同步.md","url":"/all/web/ideas/2014/04/13/intellij_idea_svn%E5%93%AA%E4%BA%9B%E6%96%87%E4%BB%B6%E5%BA%94%E8%AF%A5%E5%90%8C%E6%AD%A5.html","date":"2014-04-13 00:00:00 +0800","categories":["all","web","ideas"],"body":"intellij idea svn 哪些文件应该同步！ Add to Subversion: all files under /.idea directory in the project root but ignore workspace.xml and tasks.xml, all .iml module files. 官方说明"},{"title":"2014-04-13-以用户为中心.md","url":"/all/web/ideas/2014/04/13/make-user-center.html","date":"2014-04-13 00:00:00 +0800","categories":["all","web","ideas"],"body":"以用户为中心简介 IT立足于传统设计 软件与网站产品的区别 以用户为中心讲求科学而不是想象 炒概念与行业本质 补充 IT立足于传统设计 IT： information technology 其只是一种技术，而不是一种行业，技术是为行业服务的。 3-1 传统网站与web标准网站的区别 传统网站注重的是页面的展现，多用表格，ps等完成。把结构与表现混在一起。 符合web标准的网站注重的是页面的信息。在手机上访问也更具优势。容量也更小。 3-2 网站需要漂亮还是舒服 网站只是一个平台，网页只是几个界面，更好的服务用户，如果变成了一个纯粹的艺术品那就是失去了本质的意义。 漂亮是用户的主观判断。 舒服是作品对用户的客观影响。 3-3 浏览器兼容 1.W3C 非盈利组织 2.浏览器内核 Trident： IE浏览器使用的内核,该内核程序在1997年的IE4中首次被采用，是微软在Mosaic代码的基础之上修改而来的，并沿用到目前的IE7。 Trident实际上是一款开放的内核，其接口内核设计的相当成熟，因此才有许多采用IE内核而非IE的浏览器涌现。此外，为了方便也有很多人直接简称其为IE内核（当然也不排除有部分人是因为不知道内核名称而只好如此说）。 是所有IE版本中最差的，用户量最大，确是性能最差的。IE8做的还凑合了。 由于IE本身的“垄断性”（虽然名义上IE并非垄断，但实际上，特别是从Windows 95年代一直到XP初期，就市场占有率来说IE的确借助Windows的东风处于“垄断”的地位）而使得Trident内核的长期一家独大，微软很长时间都并没有更新Trident内核，这导致了两个后果——一是Trident内核曾经几乎与W3C标准脱节（2005年），二是Trident内核的大量 Bug等安全性问题没有得到及时解决，然后加上一些致力于开源的开发者和一些学者们公开自己认为IE浏览器不安全的观点，也有很多用户转向了其他浏览器，Firefox和Opera就是这个时候兴起的。非Trident内核浏览器的市场占有率大幅提高也致使许多网页开发人员开始注意网页标准和非IE浏览器的浏览效果问题。使用Trident内核的浏览器大量出现，除了常见的IE、Maxthon、TT等，还有GreenBrowser、 AvantBrowser等等 Geckos： Netcape6开始采用的内核，后来的Mozilla FireFox也采用了该内核，Geckos的特点是代码完全公开，因此，其可开发程度很高，全世界的程序员都可以为其编写代码，增加功能。而且这个内核跟Mosaic的关系更深，或者说事实上现在的Netscape Navigator已经改用这个内核了，因此Firefox的插件能够在Navigator上使用——当然，不是所有的都能兼容。因为这是个开源内核，因此受到许多人的青睐，Geckos内核的浏览器也很多，这也是Geckos内核虽然年轻但市场占有率能够迅速提高的重要原因。 事实上，Geckos引擎的由来跟IE不无关系，前面说过IE没有使用W3C的标准，这导致了微软内部一些开发人员的不满；他们与当时已经停止更新了的 Netscape的一些员工一起创办了Mozilla，以当时的Mosaic内核为基础重新编写内核，于是开发出了Geckos。不过事实上，Gecko 内核的浏览器仍然还是Firefox用户最多，所以有时也会被称为Firefox内核。此外Gecko也是一个跨平台内核，可以在Windows、 BSD、Linux和Mac OS X中使用。 Presto：目前Opera采用的内核，该内核在2003年的Opera7中首次被使用，也是由Opera Software开发出来的用以代替早期的Elektra内核（Opera 4～6）。该款引擎的特点就是渲染速度的优化达到了极致，也是目前公认网页浏览速度最快的浏览器内核，然而代价是牺牲了网页的兼容性。 Presto实际上这是一个动态内核，与前面几个内核的最大的区别就在脚本处理上，Presto有着天生的优势，页面的全部或者部分都能够在回应脚本事件时等情况下被重新解析。此外该内核在执行Javascript的时候有着最快的速度，根据在同等条件下的测试，Presto内核执行同等 Javascrīpt所需的时间仅有Trident和Gecko内核的约1/3（Trident内核最慢，不过两者相差没有多大）。那次测试的时候因为 Apple机的硬件条件和普通PC 机不同所以没有测试WebCore内核。只可惜Presto是商业引擎，使用Presto的除开Opera以外，只剩下NDS Browser、Wii Internet Channle、Nokia 770网络浏览器等，这很大程度上限制了Presto的发展 Webkit：苹果公司自己的内核，也是苹果的Safari浏览器使用的内核。 Webkit引擎包含WebCore排版引擎及JavascriptCore解析引擎，均是从KDE的KHTML及KJS引擎衍生而来，它们都是自由软件，在GPL条约下授权，同时支持BSD系统的开发。所以Webkit也是自由软件，同时开放源代码。在安全方面不受IE、Firefox的制约，所以 Safari浏览器在国内还是很安全的。 限于Mac OS X的使用不广泛和Safari浏览器曾经只是Mac OS X的专属浏览器，这个内核本身应该说市场范围并不大；但似乎根据最新的浏览器调查表明，该浏览器的市场甚至已经超过了Opera的Presto了——当然这一方面得益于苹果转到x86架构之后的人气暴涨，另外也是因为Safari 3终于推出了Windows版的缘故吧。 因为Apple最近才将Safari移植到Windows因此暂时没有Windows上使用WebKit的其他浏览器，不过Mac下还有OmniWeb、Shiira等人气很高的浏览器。 最近火起来的chrome也是利用了此内核，其javascript的解析速度最快，将尽极致。 实际开发中，应该先满足火狐等浏览器，再去弥补IE的不足。 3-4 浏览器的市场占有率 http://www.w3schools.com/browsers/browsers_stats.asp 3-5 seo搜索引擎优化 良好的信息架构     爬虫很喜欢 4.以用户为中心讲究科学而不是想象 1.人眼看到的整个页面从左上角到右下角 左上角防止logo，header的右下角放置登陆选项 2.1条定律同样适用于软件。 5.炒概念与行业本质 为了做网站而做网站，为了设计而设计，为了兼容而兼容。。。。，这就是炒作行业概念，而没有认清本质问题导致的误区，为了做什么而做什么，是思想僵化，导致无创新。 6.补充 1推广网站 推广到搜索引擎 交换友情链接 导航网站登录 网络广告投放 邮件广告 病毒式营销{免费服务，精美网页，软件制作} BBS宣传，发帖 活动宣传。改版 2．网站字体使用 body {            font-family:verdana,simsun,sans-serif;            font-size:12px; } 幼圆：导航文字。 华文行楷：可以增加欣赏乐趣。 花纹彩云：广告条。"},{"title":"2014-04-13-免费空间.md","url":"/all/web/ideas/2014/04/13/%E5%85%8D%E8%B4%B9%E7%A9%BA%E9%97%B4.html","date":"2014-04-13 00:00:00 +0800","categories":["all","web","ideas"],"body":"免费空间 www.freewha.com 126邮箱 f~1 Account Manager is located at http://noadsbiz.freewebhostingarea.com/. Username: www.newweber.com Password: f~1 MySQL Main Database name: 307079  MySQL Database username: 307079  MySQL Database password: equal with account password  MySQL Database host: localhost  If you have accounts created on more than one server, see http://www.freewebhostingarea.com/members/. Some scripts require server path. Yours is /home/vhosts/www.newweber.com. Your Personal FTP Information: FTP Server/Host: noads.biz FTP Login/Username: www.newweber.com FTP PassWord: f~1 To upload your files go to our Web based FTP client (recommended), located at http://noadsbiz.freewebhostingarea.com/ftp/. Once logged in, you will be able to create a new dir, new file, to upload a zip archive and have it unzipped automatically, to edit your files, to select files and download them as .zip, to copy, move, delete, rename, chmod (change permissions), search anything under your account, ability to see and edit dot files like .htaccess. With a normal ftp program you will not be able to do this. For a complete list of features see http://noadsbiz.freewebhostingarea.com/ftp/help.html. MySQL database Information: You will get a limited number of free databases per account. But you can create other accounts and get as many free databases as you want. ATTENTION!!! MySQL databases must be activated @ Account Manager >> Hit Create DB button. MySQL HostName is localhost only. We don't allow external connections. phpMyAdmin is located at http://noadsbiz.freewebhostingarea.com/pma/. Log in using MySQL username. PhpMyAdmin (PMA) is a tool that will help you to administer your database. You don't have privileges to create a database with PMA because, as said before, databases must be created @ Account Manager using Create DB button. Database details (db name, username) will be provided at Account Manager once you create the database. Other features at Account Manager One click Autoinstaller for PhpBB3, SMF, WordPress, Joomla, Drupal (with Clean URLs preenabled), Moodle. One click database backup & One click database import Manage DB button (available after you create a database) >> then choose Backup DB or Import DB buttons Configure PHP you can turn on/off Register Globals, Magic Quotes gpc, Allow_url_include variables. safe_mode is automatically turned off few hours after account creation. Reset Account useful if you want to delete all files/databases under your account. Fix Ownership some files are created with apache permissions (e.g. unpack an archive, php scripts) and you're not able to edit/delete them. This feature will fix permissions and you will be able to manipulate all files under your account. Free hit tracker (web counter) Sign up @ http://www.1FreeCounter.com then just insert the code into your pages. We have full support for mod_rewrite or dot files (.htaccess, .htpasswd). Attention!! A wrong .htaccess file can block your site and instead you will see a 500 internal server error. With .htaccess you're able to set custom error pages. ErrorDocument 404 /404.html ErrorDocument 403 /403.html 404.html - not found errors 403.html - forbidden errors enable indexes using: Options +Indexes IndexOptions FancyIndexing turn on/off php variables: php_flag display_errors On php_flag register_globals On block sites using: RewriteEngine on RewriteCond %{HTTP_REFERER} ^http://.badsite.com [NC,OR] RewriteCond %{HTTP_REFERER} ^http://.otherbadsite.com [NC] RewriteRule .* - [F] note the OR if you want to add block more than one domain. block IPs using: order allow,deny deny from 192.168.0.101 deny from 10.0.0. allow from all first example 192.168.0.101, you block that particular ip second example 10.0.0., you block all ips starting with 10.0.0. block an ISP or a particular user coming from an ISP: order allow,deny deny from bad-isp.com deny from user.other-bad-isp.com allow from all Attention!! Use a very hard to guess password to prevent your account being hacked. Also, install only new and optimized scripts. Take care with full permissions 777!!! For security reasons, set permissions for script configuration file to 644. You will find a lot of useful information if you check our FAQ Section. For latest news follow us at TWITTER. Our service is ad free for small sites. To support us so we can offer a quality service, upgrade your account at http://www.freewebhostingarea.com/removeads.html. Thank you for using our services, Free Web Hosting Area.com"},{"title":"2014-04-13-四级地址选择.md","url":"/all/web/ideas/2014/04/13/%E5%9B%9B%E7%BA%A7%E5%9C%B0%E5%9D%80%E9%80%89%E6%8B%A9.html","date":"2014-04-13 00:00:00 +0800","categories":["all","web","ideas"],"body":"json数据文件下载  "},{"title":"2014-04-13-破解evernote.md","url":"/all/web/ideas/2014/04/13/%E7%A0%B4%E8%A7%A3evernote.html","date":"2014-04-13 00:00:00 +0800","categories":["all","web","ideas"],"body":"起初在Google上铺天盖地的搜索,一直没有找到我的版本的去广告版本,后就没太在意,一直用了这么长时间了.今天在搜索资料的时候无意间找到了一篇文章Evernote去左下角广告 ,(如果打不开,请翻出去吧,这个**的好的文章,好的资料都得翻啊,哎.)算了,下面我写下主要的过程,先感谢Godkiller(名字太有创意呢,呵呵)这个高手吧. / 请在修改前备份该执行文件,任务管理器中查看是否还存在Evernote的进程,有的话要全部关闭; 打开WINHEX载入Evernote.exe搜索16进制值 45004E0041006400420072006F0077007300650072004300740072006C 直接把这串值填充0,重启Evernote就可以看到左下角的广告窗口没有了. /"},{"title":"2014-04-13-读取json配置文件.md","url":"/all/web/nodejs/2014/04/13/%E8%AF%BB%E5%8F%96json%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html","date":"2014-04-13 00:00:00 +0800","categories":["all","web","nodejs"],"body":"如果有一个文件叫做config.json 直接 config = require(\"./config\"); Config 就是config.json文件中包含的json对象， 非常简单。"},{"title":"2014-04-14-mac下idea账号报错.md","url":"/all/web/ideas/2014/04/14/mac%E4%B8%8Bidea%E8%B4%A6%E5%8F%B7%E6%8A%A5%E9%94%99.html","date":"2014-04-14 00:00:00 +0800","categories":["all","web","ideas"],"body":"报错信息为： javax.net.ssl.SSLException: java.lang.RuntimeException: Unexpected error: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty 这是因为mac自带的java sdk本身存在问题，所以需要重新安装， 重新安装的方法也非常简单。 There are a few places a JDK can live: /System/Library/Java/JavaVirtualMachines/ /Library/Java/JavaVirtualMachines/ ~/Library/Java/JavaVirtualMachines/ 我的电脑的jdk 安装在了 /Library/Java/JavaVirtualMachines/ 进到这个目录看到已经有一个1.6版本呢的jdk， 将其删除 这时候打开idea 会提示你需要安装1.6版本jdk才可， 点击安装 重新安装后的jdk就不会存在这个问题了。"},{"title":"2014-04-14-重装idea后必装插件.md","url":"/all/web/ideas/2014/04/14/reinstall-idea-plugins.html","date":"2014-04-14 00:00:00 +0800","categories":["all","web","ideas"],"body":"因为国内网络访问这个站点效果一直不太好，经常下载不到，所以我全部趁网络好的时候check了离线包下来 vim 2014-04-28 markdown 2013-12-01 key promoter 2012-05-22  Shows to user how easy he can make same action using only keyboard(menus and toolbar button mouse clicks initiates shortcut display) webmaster 2014-01-09  Provides some extra features for web-developers (see 'Webmaster' item in 'Tools', Editor popup and Project View popup) hexview 2006-09-13  自己在webstrom下装了， 死活找不到在哪  所以我就改用notepad++ 看文件的16进制了， notepad++ 也是需要装插件的hexEditor  安装方法非常简单： 把dll拷贝到D:\\Program Files (x86)\\Notepad++\\plugins  notepad++的安装目录的plugins目录, 重启notepad++ Character Browser 2006-02-07  This plugin allows you to browse and search characters and parts of the Unicode\" character set. Insert characters into an editor in one of 10 forms. Decodes coded characters at the cursor position.  同样是webstorm装了找不到在哪"},{"title":"2014-04-14-ruby安装gem的时候报错.md","url":"/all/web/2014/04/14/ruby-install-gem-report-error.html","date":"2014-04-14 00:00:00 +0800","categories":["all","web"],"body":"ERROR:  Could not find a valid gem 'bundler' (>= 0) in any repository 解决方法： 排查本地sources  $ gem sources   CURRENT SOURCES   http://rubygems.org/ If not, you should be able to add it with"},{"title":"2014-04-14-本地系统级代理软件haproxifier.md","url":"/all/web/ideas/2014/04/14/%E6%9C%AC%E5%9C%B0%E7%B3%BB%E7%BB%9F%E7%BA%A7%E4%BB%A3%E7%90%86%E8%BD%AF%E4%BB%B6haproxifier.html","date":"2014-04-14 00:00:00 +0800","categories":["all","web","ideas"],"body":"下载地址,win 下载地址,mac"},{"title":"表格post提交方式，form post method, form submit 提交 拦截","url":"/all/web/2014/04/15/form_submit.html","date":"2014-04-15 00:00:00 +0800","categories":["all","web"],"body":"有人在stackoverflow上提过类似的问题访问 When you make a POST request, you have to encode the data that forms the body of the request in some way. HTML forms provide two methods of encoding. The default is application/x-www-form-urlencoded, which is more or less the same as a query string on the end of the URL. The other, multipart/form-data, is a more complicated encoding but one which allows entire files to be included in the data. (HTML 5 introduces the text/plain encoding which is useful only for debugging … and even then the others are better given sensible debugging tools). The specifics of the encodings don't really matter to most developers. When you are writing client-side code: Use multipart/form-data when your form includes any  elements. When you are writing server-side code: Use a prewritten form handling library (e.g. Perl's CGI->param or the one exposed by PHP's $_POST superglobal) and it will take care of the differences for you. Don't bother trying to parse the raw input received by the server. 在手机上开发的时候，我们常常会使用html5的 input 元素的form属性来进行构建页面， 将form和输入控件分离开来，如下： input#search-box 本来应该放在form中，但是我们把form单独抽离出来以使结构更加简单，清晰，而对于提交事件的处理，我们常常是采用监听submit事件的方式来实现： 但是如果我们想在程序中主动的触发form的submit事件，比如说调用$(\"search-hack-form\").submit(); 那么我们前边写的对submit事件的监听并不会得到执行，那怎么办呢？ 方法也很简单，像我们上边的写法，在form中添加一个不可见的 search-hack-form-submit submit 的input元素，调用这个元素的click事件即可。 这个click事件会转而引发 form的submit事件。"},{"title":"wireshark filter 如何使用","url":"/all/web/2014/04/15/wireshark_filter.html","date":"2014-04-15 00:00:00 +0800","categories":["all","web"],"body":"wireshark filter 指定某一特定的url http && http.request.method == \"GET\" && http.host matches \"megavideo.com\" && http.request.uri contains \"files\""},{"title":"五种开源协议的比较","url":"/all/web/ideas/2014/04/16/bsd-apache-gpl-lgpl-mid.html","date":"2014-04-16 00:00:00 +0800","categories":["all","web","ideas"],"body":"当Adobe、Microsoft、Sun等一系列巨头开始表现出对”开源”的青睐时，”开源”的时代即将到来！ 最初来自：sinoprise.com/read.php?tid-662-page-e-fpage-1.html（遗憾的是这个链接已经打不开了），我基本未改动，只是进行了一些排版和整理。 参考文献：http://www.fsf.org/licensing/licenses/ 现今存在的开源协议很多，而经过Open Source Initiative组织通过批准的开源协议目前有58种（http://www.opensource.org/licenses/alphabetical）。我们在常见的开源协议如BSD, GPL, LGPL,MIT等都是OSI批准的协议。如果要开源自己的代码，最好也是选择这些被批准的开源协议。 这里我们来看四种最常用的开源协议及它们的适用范围，供那些准备开源或者使用开源产品的开发人员/厂家参考。 BSD开源协议（original BSD license、FreeBSD license、Original BSD license） BSD开源协议是一个给于使用者很大自由的协议。基本上使用者可以”为所欲为”,可以自由的使用，修改源代码，也可以将修改后的代码作为开源或者专有软件再发布。 但”为所欲为”的前提当你发布使用了BSD协议的代码，或则以BSD协议代码为基础做二次开发自己的产品时，需要满足三个条件： 如果再发布的产品中包含源代码，则在源代码中必须带有原来代码中的BSD协议。 如果再发布的只是二进制类库/软件，则需要在类库/软件的文档和版权声明中包含原来代码中的BSD协议。 不可以用开源代码的作者/机构名字和原来产品的名字做市场推广。 BSD 代码鼓励代码共享，但需要尊重代码作者的著作权。BSD由于允许使用者修改和重新发布代码，也允许使用或在BSD代码上开发商业软件发布和销售，因此是对商业集成很友好的协议。而很多的公司企业在选用开源产品的时候都首选BSD协议，因为可以完全控制这些第三方的代码，在必要的时候可以修改或者二次开发。 Apache Licence 2.0（Apache License, Version 2.0、Apache License, Version 1.1、Apache License, Version 1.0） Apache Licence是著名的非盈利开源组织Apache采用的协议。该协议和BSD类似，同样鼓励代码共享和尊重原作者的著作权，同样允许代码修改，再发布（作为开源或商业软件）。需要满足的条件也和BSD类似： 需要给代码的用户一份Apache Licence 如果你修改了代码，需要再被修改的文件中说明。 在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明。 如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有Apache Licence。你可以在Notice中增加自己的许可，但不可以表现为对Apache Licence构成更改。 Apache Licence也是对商业应用友好的许可。使用者也可以在需要的时候修改代码来满足需要并作为开源或商业产品发布/销售。 GPL（GNU General Public License） 我们很熟悉的Linux就是采用了GPL。GPL协议和BSD, Apache Licence等鼓励代码重用的许可很不一样。GPL的出发点是代码的开源/免费使用和引用/修改/衍生代码的开源/免费使用，但不允许修改后和衍生的代码做为闭源的商业软件发布和销售。这也就是为什么我们能用免费的各种linux，包括商业公司的linux和linux上各种各样的由个人，组织，以及商业软件公司开发的免费软件了。 GPL协议的主要内容是只要在一个软件中使用(“使用”指类库引用，修改后的代码或者衍生代码)GPL 协议的产品，则该软件产品必须也采用GPL协议，既必须也是开源和免费。这就是所谓的”传染性”。GPL协议的产品作为一个单独的产品使用没有任何问题，还可以享受免费的优势。 由于GPL严格要求使用了GPL类库的软件产品必须使用GPL协议，对于使用GPL协议的开源代码，商业软件或者对代码有保密要求的部门就不适合集成/采用作为类库和二次开发的基础。 其它细节如再发布的时候需要伴随GPL协议等和BSD/Apache等类似。 LGPL（GNU Lesser General Public License） LGPL是GPL的一个为主要为类库使用设计的开源协议。和GPL要求任何使用/修改/衍生之GPL类库的的软件必须采用GPL协议不同。LGPL允许商业软件通过类库引用(link)方式使用LGPL类库而不需要开源商业软件的代码。这使得采用LGPL协议的开源代码可以被商业软件作为类库引用并发布和销售。 但是如果修改LGPL协议的代码或者衍生，则所有修改的代码，涉及修改部分的额外代码和衍生的代码都必须采用LGPL协议。因此LGPL协议的开源代码很适合作为第三方类库被商业软件引用，但不适合希望以LGPL协议代码为基础，通过修改和衍生的方式做二次开发的商业软件采用。 GPL/LGPL都保障原作者的知识产权，避免有人利用开源代码复制并开发类似的产品 MIT（MIT） MIT是和BSD一样宽范的许可协议,作者只想保留版权,而无任何其他了限制.也就是说,你必须在你的发行版里包含原许可协议的声明,无论你是以二进制发布的还是以源代码发布的."},{"title":"grunt配置http任务，每次编译好自动发布相关zip包","url":"/all/web/2014/04/16/grunt-http-request.html","date":"2014-04-16 00:00:00 +0800","categories":["all","web"],"body":"之前每次编译好，发布之前我们都需要到包管理平台 http://admin.connect.oa.com/index.html 发布一次zip包 频繁操作的成本就会非常高 所以需要在grunt编译好zip包之后就能自动把这条cgi包发出去 让cgi开了相关的cgi接口，参数跟管理后台上的参数保持一致 说说开发过程中遇到的问题： 选型grunt插件， 第一个选定的就是 grunt-http 我们是form表单数据， 所以需要安装 form-data 为了避免加入cookie数据引入的蛋疼问题， 让cgi去掉了cookie校验 form.append('file' ** ) 这里， 我一开始是按照 grunt-http的官方示例里边写的 form.append('file', grunt.file.read(path.join(__dirname, 'images', 'pic.png'))); 这么写是有问题的，因为grunt.file.read是把一个文件按照string的形式读出来，而我们这里上传是以octet-stream的方式，8bit字节流的方式上传，所以这样穿上去后台无法正常解压，所以我采用下边的语句：  form.append('file', fs.createReadStream('dist/qqcache/qqfind_qun_mobile' + (TIMESTAMP) + '.zip'), {filename: 'qqfind_qun_mobile' + (TIMESTAMP) + '.zip', contentType: 'application/octet-stream'}); 第三个参数是options， 在options里边指定filename和contentType。"},{"title":"nodejs程序后台一直运行","url":"/all/web/nodejs/2014/04/16/nodejs_serve_background_run.html","date":"2014-04-16 00:00:00 +0800","categories":["all","web","nodejs"],"body":"nohup node server.js & unix/Linux下一般想让某个程序在后台运行，很多都是使用 & 在程序结尾来让程序自动运行。比如我们要运行mysql在后台： 　但是我们很多程序并不象mysqld一样可以做成守护进程，可能我们的程序只是普通程序而已，一般这种程序即使使用 & 结尾，如果终端关闭，那么程序也会被关闭。为了能够后台运行，我们需要使用nohup这个命令，比如我们有个start.sh需要在后台运行，并且希望在后台能够一直运行，那么就使用nohup： 在shell中回车后提示： 原程序的的标准输出被自动改向到当前目录下的nohup.out文件，起到了log的作用。 但是有时候在这一步会有问题，当把终端关闭后，进程会自动被关闭，察看nohup.out可以看到在关闭终端瞬间服务自动关闭。 咨询红旗Linux工程师后，他也不得其解，在我的终端上执行后，他启动的进程竟然在关闭终端后依然运行。 在第二遍给我演示时，我才发现我和他操作终端时的一个细节不同：他是在当shell中提示了nohup成功后还需要按终端上键盘任意键退回到shell输入命令窗口，然后通过在shell中输入exit来退出终端；而我是每次在nohup执行成功后直接点关闭程序按钮关闭终端.。所以这时候会断掉该命令所对应的session，导致nohup对应的进程被通知需要一起shutdown。 这个细节有人和我一样没注意到，所以在这儿记录一下了。 附：nohup命令参考 nohup 命令 　　用途：不挂断地运行命令。 　　语法：nohup Command [ Arg ... ] [　& ] 　　描述：nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断（SIGHUP）信号。在注销后使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，添加 & （ 表示\"and\"的符号）到命令的尾部。 　　无论是否将 nohup 命令的输出重定向到终端，输出都将附加到当前目录的 nohup.out 文件中。如果当前目录的 nohup.out 文件不可写，输出重定向到 $HOME/nohup.out 文件中。如果没有文件能创建或打开以用于追加，那么 Command 参数指定的命令不可调用。如果标准错误是一个终端，那么把指定的命令写给标准错误的所有输出作为标准输出重定向到相同的文件描述符。 　　退出状态：该命令返回下列出口值： 　　126 可以查找但不能调用 Command 参数指定的命令。 　　127 nohup 命令发生错误或不能查找由 Command 参数指定的命令。 　　否则，nohup 命令的退出状态是 Command 参数指定命令的退出状态。 　　nohup命令及其输出文件 　　nohup命令：如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。nohup就是不挂起的意思( n ohang up)。 　　该命令的一般形式为：nohup command & 　　使用nohup命令提交作业 　　如果使用nohup命令提交作业，那么在缺省情况下该作业的所有输出都被重定向到一个名为nohup.out的文件中，除非另外指定了输出文件： 　　nohup command > myout.file 2>&1 & 　　在上面的例子中，输出被重定向到myout.file文件中。 　　使用 jobs 查看任务。 　　使用 fg %n　关闭。 　　另外有两个常用的ftp工具ncftpget和ncftpput，可以实现后台的ftp上传和下载，这样就可以利用这些命令在后台上传和下载文件了。"},{"title":"stackedit如何在内网部署","url":"/all/web/nodejs/2014/04/16/stackedit_deploy.html","date":"2014-04-16 00:00:00 +0800","categories":["all","web","nodejs"],"body":"首先在github上下载stackedit的源码 同时需要下载stackedit-download-proxy的源码 在stackedit项目目录下有一个public目录，这就是网站的全部发布代码，将stackedit直接部署到服务器下， 这里我们部署到了域名 alloyteam.oa.com/md/ 这时候通过alloyteam.oa.com/md/ 可以直接打开stackedit 的编辑器模式 Stackedit 有一种view模式，这是我们大多数查看文档的人所需要的： http://alloyteam.oa.com/md/viewer.html?url=http://alloyteam.oa.com/readme/qqfindmobile.md 在后边直接跟需要查看的md文件的url路径，就可以直接通过viewer模式查看这个文件了。 但这里还有几步要做： unix/Linux下一般想让某个程序在后台运行，很多都是使用 & 在程序结尾来让程序自动运行。比如我们要运行mysql在后台： 　但是我们很多程序并不象mysqld一样可以做成守护进程，可能我们的程序只是普通程序而已，一般这种程序即使使用 & 结尾，如果终端关闭，那么程序也会被关闭。为了能够后台运行，我们需要使用nohup这个命令，比如我们有个start.sh需要在后台运行，并且希望在后台能够一直运行，那么就使用nohup： 在shell中回车后提示： 原程序的的标准输出被自动改向到当前目录下的nohup.out文件，起到了log的作用。 但是有时候在这一步会有问题，当把终端关闭后，进程会自动被关闭，察看nohup.out可以看到在关闭终端瞬间服务自动关闭。 咨询红旗Linux工程师后，他也不得其解，在我的终端上执行后，他启动的进程竟然在关闭终端后依然运行。 在第二遍给我演示时，我才发现我和他操作终端时的一个细节不同：他是在当shell中提示了nohup成功后还需要按终端上键盘任意键退回到shell输入命令窗口，然后通过在shell中输入exit来退出终端；而我是每次在nohup执行成功后直接点关闭程序按钮关闭终端.。所以这时候会断掉该命令所对应的session，导致nohup对应的进程被通知需要一起shutdown。 这个细节有人和我一样没注意到，所以在这儿记录一下了。 附：nohup命令参考 nohup 命令 　　用途：不挂断地运行命令。 　　语法：nohup Command [ Arg ... ] [　& ] 　　描述：nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断（SIGHUP）信号。在注销后使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，添加 & （ 表示\"and\"的符号）到命令的尾部。 　　无论是否将 nohup 命令的输出重定向到终端，输出都将附加到当前目录的 nohup.out 文件中。如果当前目录的 nohup.out 文件不可写，输出重定向到 $HOME/nohup.out 文件中。如果没有文件能创建或打开以用于追加，那么 Command 参数指定的命令不可调用。如果标准错误是一个终端，那么把指定的命令写给标准错误的所有输出作为标准输出重定向到相同的文件描述符。 　　退出状态：该命令返回下列出口值： 　　126 可以查找但不能调用 Command 参数指定的命令。 　　127 nohup 命令发生错误或不能查找由 Command 参数指定的命令。 　　否则，nohup 命令的退出状态是 Command 参数指定命令的退出状态。 　　nohup命令及其输出文件 　　nohup命令：如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。nohup就是不挂起的意思( n ohang up)。 　　该命令的一般形式为：nohup command & 　　使用nohup命令提交作业 　　如果使用nohup命令提交作业，那么在缺省情况下该作业的所有输出都被重定向到一个名为nohup.out的文件中，除非另外指定了输出文件： 　　nohup command > myout.file 2>&1 & 　　在上面的例子中，输出被重定向到myout.file文件中。 　　使用 jobs 查看任务。 　　使用 fg %n　关闭。 　　另外有两个常用的ftp工具ncftpget和ncftpput，可以实现后台的ftp上传和下载，这样就可以利用这些命令在后台上传和下载文件了。 配置nginx， 让下载链接指向1中启动的这个服务。 注意download处 upstream deploy.alloyteam {     server 127.0.0.1:12345; } server {     listen 80;     server_name alloyteam.oa.com;     proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;     root /data/sites/alloyteam.oa.com;    location /deploy/ {       proxy_pass http://127.0.0.1:12345/;    }    location = /download {       proxy_pass http://127.0.0.1:9999/download;    }    error_log /usr/local/nginx/logs/alloyteam.oa.com_error.log; } 修改 stackedit的源码， 把下载url \"https://stackedit-download-proxy.herokuapp.com/” 修改为： http://alloyteam.oa.com/ 部署在我们测试机上的stackedit-download-proxy 使用http get 去get我们制定的md文件， 我们把md文件也部署到 alloyteam.oa.com域名下， 放在readme子目录 http://alloyteam.oa.com/readme/qqfindmobile.md    但是测试机并没有办法解析到alloyteam.oa.com具体指向的机器，所以需要配置测试机的host： cd /etc/   vim hosts 在里边添加一条： 10.12.23.163 alloyteam.oa.com Ok， 现在可以正常使用了。"},{"title":"ctrl+f5强制刷新，浏览器干了哪些事情","url":"/all/web/2014/04/17/browser-ctrl-f5.html","date":"2014-04-17 00:00:00 +0800","categories":["all","web"],"body":"ctrl+f5 会强制在资源请求头中加上  Cache-Control: no-cache  Pragma: no-cache f5 会强制在资源请求头中加上  Cache-Control: max-age=0  有可能会带 if-modified-since: HTTP协议说明 HTTP/1.1规范14.9.4中规定： End-to-end reload(即CTRL-F5强制刷新)会发送如下HTTP头： Cache-Control: no-cache Pragma: no-cache Specific end-to-end revalidation(即F5 刷新)会发送如下HTTP头： Cache-Control: max-age=0 If-Modified-Since: Fri, 15 Apr 2011 12:08:21 GMT 补充2中说的可能的原因  A request with If-Modified-Since makes only sense if the client has already a resource which is obtained along a response with a Last-Modified header in combination with headers which allow browser caching like a Cache-Control and/or Pragma value containing public.  Also, I've noticed that some browsers does not include If-Modified-Since when the original response also contained an ETag header. The browser will instead use If-None-Match to test it.  其实浏览器每次请求资源，都会在本地信息中对这条url中记录一条 Last Accessed  http RFC 中说在server 返回头中没有 cache control 和 expires 信息时， 浏览器有权利自主决定到底用什么缓存策略， 一般是LM-Factor 算法：  if a cached document was last changed in the distant past, it may be a stable document and less likely to change suddenly, so it is safer to keep it in the cache longer. max-age=0 的作用其实等于 cache-control: no-cache 而跟 cache-control: no-store 大不相同： no-store 的意思是 这个网络资源绝对不能被缓存， 每次使用到都必须去服务器上拉取。 no-cache的意思则不一样， 这个网络资源可以在cache里边放一份， 但你不能直接使用， 必须先到服务器上问一下，这个资源是不是最新的， 如果是最新的则可以直接从cache中取出来用， 如果不是， 则需要从服务器重新拉取。"},{"title":"站点更新后通知到谷歌","url":"/all/web/ideas/2014/04/19/site-update-notify-google.html","date":"2014-04-19 00:00:00 +0800","categories":["all","web","ideas"],"body":"通过以下网址手动通知Google网站更新：http://www.google.com/webmasters/sitemaps/ping?sitemap=http://www.yourdomain.com/sitemap.xml"},{"title":"github使用proxy访问","url":"/all/web/ideas/2014/04/20/git-proxy.html","date":"2014-04-20 00:00:00 +0800","categories":["all","web","ideas"],"body":"蛋疼的情况发生了， 在我天朝youtube twitter用不了我也就忍了，居然github也用不了了 解决方法如下： 安装goagent， 不知道的自行谷歌 设置git的代理  git config http.proxy http://127.0.0.1:8087 代理地址是goagent的代理地址"},{"title":"软件版本定义规则","url":"/all/web/ideas/2014/04/20/software-version-definition.html","date":"2014-04-20 00:00:00 +0800","categories":["all","web","ideas"],"body":"基本规则 顾名思义，语义化的版本就是让版本号更具语义化，可以传达出关于软件本身的一些重要信息而不只是简单的一串数字。 版本格式：主版本号.次版本号.修订号，版本号递增规则如下： 主版本号：当你做了不兼容的API 修改 次版本号：当你做了向下兼容的功能性新增 修订号：当你做了向下兼容的问题修正 先行版（预览版）版本号及版本编译信息可以加到\"主版本号.次版本号.修订号\"的后面，作为延伸。 具体规范 具体详尽的规范可以参见其官网，当然也可以访问中文版本。这里简单总结一下。 版本号是以点隔开的形式'X.Y.Z' 且XYZ为正整数，数字前面不加0， 也就是说v0.1.0不能写成v0.10.0 一般软件开发过程中以0.1.0 版本开始，开发过程中不断增加新功能，则增加次版本号比如变成0.2.0，然后期间的问题及bug修复体现在修订号上，比如版本号变成0.1.12。这一阶段的版本视为不稳定版本，一般也未对外发布 主版本号表示正式版的形成，也即如果你开发的是供大家使用的软件或插件，那就标致本软件公共API的形成，比如新浪微博API v1.0.0发布，大家就可以在自己网站上调用了，这是个正式而稳定的版本。所以这里有个规定，版本一旦发布，不允许对软件做任何修改。任何改过之后的代码都应标记新的版本号在下次发布中体现 主版本号的增加可以是次版本号以有修订号增加到一定数量后的结果，也可以是有不兼容旧版的新功能或API加入的结果，并且主版本增加后次版本号和修订号归零 次版本号表示有兼容旧版本的功能或API增加，而修订号表示bug修复并且这种修复一般是对代码结果不正确的修复而且一定是兼容旧版本的，如果你修复bug越改越大结果不兼容旧版本了，则需要增加主版本号 其他信息比如预览版，先行版或者软件编译信息可以跟随在修订号之后。示例：1.0.0-alpha+001、1.0.0+20130313144700、 1.0.0-beta+exp.sha.5114f85 外文网站参考资料"},{"title":"chrome地址栏直接打开tencent串","url":"/all/web/ideas/2014/04/21/chrome-address-bar-instant-tencent.html","date":"2014-04-21 00:00:00 +0800","categories":["all","web","ideas"],"body":"chrome的默认行为是当你在地址栏中输入一个非http https ftp chrome等开头的信息的时候， chrome会使用默认的搜索引擎发起一个搜索行为， 而腾讯广泛使用的调起客户端的tencent串协议就没办法直接在地址栏中调试了 Tencent串是一种URL Protocol Handler，也可以理解成用户自定义协议或伪Http协议。实现从web端调用本地客户端的功能，并根据约定携带自定义的数据。 URL Protocol Handler 可以从运行窗口、dos命令行、浏览器地址栏运行。 使用URL Protocol Handler需要有三步： 注册协议  通过写windows注册表实现，在HKEY_CLASSES_ROOT下建立Tencent的注册表项  Tencent下：  DefaultIcon下：  Command下：  都需要生成一定的键值 d:\\programe files\\tencent\\qq\\bin\\timwp.exe 实现协议处理程序  即上面注册的Timwp.exe，它接受命令行参数，处理该协议。 协议发起  在浏览器或运行窗口中输入tencent://123，windows会从注册表中查找匹配的协议名，如果找到，则调用它注册的协议处理程序，并将参数传入，这样就实现了从web端调用本地客户端的能力。  QQ程序安装时以及每次QQ启动时都会重新注册自己目录下的timwp.exe作为处理tencent协议的程序。 chrome解决方法： 打开chrome的setting 找到 search 一项 manage 在other search engines 添加一个 把新添加的项设为默认search engine即可"},{"title":"编码知识梳理","url":"/all/web/2014/04/22/charset-utf-ascii.html","date":"2014-04-22 00:00:00 +0800","categories":["all","web"],"body":"一直以来我对编码知识都倍感疑惑。借着这次整理书库的机会，把之前 joltwang(⺩王辉) 分享的编码知识ppt翻了出来，特此重新梳理一下 abcd算是 √®∑ø当然也算是 emoij表情符号也算是 夏でも底に冷たさをもつ青いそら 也算是 显而易见把具有相同特征的字符归纳整理到一个集合中就形成了字符集 这就涉及到了编码 字符编码的要素 首先要规定占用存储，也就是说一个字符需要几个字节来表示 生成编码规则下的编码表，也就是规定字符与字节序列间的一一对应关系 ASCII (American Standard Code for Information Interchange) 是基于拉丁字母的一套字符编码，占用一个字节，使用了一个字节中的7位，定义了128个字符，其中33个非显示字符，96个可显示字符 我们知道，在计算机内部，所有的信息最终都表示成一个二进制的字符串。每一个二进制位（bit）有0和1两种状态，因此八个二进制位就可以组合出256种状态，这被称为一个字节（byte）。也就是说，一个字节一共可以表示256种不同的状态，每一个状态对应一个符号，就是256个符号，从00000000 到11111111 ASCII编码就是把英语字符和二进制位之间的关系，做了统一规定。比如空格是32（二进制 00100000）， 大写字母A是65（二进制是 01000001）。ACSII只使用了后7位bit，每个字节的第一位bit统一为0。 空格当然算是可显示字符了，至于不可显示字符，多是一些陈废的操控文字的控制字符，但在DOS模式下可显示出一些诸如笑脸，扑克牌花式等符号。  ISO8859实际上是一种字符集标准——拉丁字符集,各个子集都有自 己的字符编码,共有14种字符编码。比如说iso-8859-1 扩展位放置的时德文字符， iso-8859-7 扩展位放的是希腊字符，这个标准存在的问题就是子集扩展部分互不兼容，只有拉丁字符部分相互兼容。 英文字符集: 26个字母; 简体字符集: 85000个,常用汉字:7000个。 简体字符的编码表远大于拉丁字符的编码表。 所以我们有了GB系列的编码 说说GB2312 借鉴 ISO8859 的编码思想,兼容ASCII,以两个字节为单位存储进行扩展。  两个字节就有72 * 94 = 6768种可能,也就是可以表示 6768 种汉 字,GB2312实际收录6763个汉字,占常用汉字的99%。 存在的问题:很多汉字无法打印出来,比如朱镕基的“镕”,只能使用(金 +容)、(金容)、(左金右容)等来表示。 诸如此类的， 繁体中文有了 big5 编码， 韩文有了EUC-KR编码， 日文有了SJIS编码 这样依然存在问题， 这些编码集相互不兼容。 微软在发行windows95的时候发现了中文简繁体不能共存的问题， 所以提出了gbk编码， GBK(kuozhan 扩展)是对GB2312的扩展, 最早实现于Windows 95简体中文版, 双字节存储。 包含了 gb2312 和 big5 + 少数民族 + 日韩东亚文字 后来我们国家又提出了 gb18030 编码标准， 被称为国标码 主要工作是对多名族语言的补充,采用多字节编码,每个字可以由1个、2个或4个字 节组成。 gk18030 包含了gbk以及更丰富的少数民族文字 藏文，满文等 但是gb18030 仍然解决不了国际化的问题。 这时候就需要诞生一个国际化的编码标准，首先出现的是一个字符集那就是unicode字符集。   需要注意的unicode只是一个字符集， 它只规定了符号的二进制代码，却没有规定这个二进制代码应该如何存储。 比如，汉子“严”的unicode表示是4E25，转换成二进制足足有15位 100111000100101，也就是说这个负号的表示至少需要2个字节。表示其他更大的符号，可能需要3个或者4个字节，甚至更多。 这里就有两个严重的问题： 如何才能区分unicode和ascii？ 计算机怎么知道三个字节表示一个符号而不是分别表示三个符号呢？ 我们已经知道英文字母只用一个字节表示就够了，如果unicode统一规定，每个符号用三个或者四个字节表示，那么每个英文字母前都必须有两到三个字节全部为0，这对于存储来说是极大的浪费，文本文件的大小会因此大出两到三倍，这是无法接受的。 所以就有了下边的结果： 出现了unicode的多种存储方式。也就是说有许多种不同的二进制格式，可以用来表示unicode字符集 unicode在很长一段时间内无法推广，直到互联网的出现 下边就来说一说各种编码方式: UTF: unicode transformation format utf-8: 可变长的 utf-16: 大部分是2个字节 utf-32: 4个字节 在Unicode中：汉字“字”对应的数字是23383（十进制），十六进制表示为5B57。在Unicode中，我们有很多方式将数字23383表示成程序中的数据，包括：UTF-8、UTF-16、UTF-32。UTF是“UCS Transformation Format”的缩写，可以翻译成Unicode字符集转换格式，即怎样将Unicode定义的数字转换成程序数据。例如，“汉字”对应的数字是0x6c49和0x5b57，而编码的程序数据是： chardata_utf8[]={0xE6,0xB1,0x89,0xE5,0xAD,0x97};//UTF-8编码 char16_tdata_utf16[]={0x6C49,0x5B57};//UTF-16编码 char32_tdata_utf32[]={0x00006C49,0x00005B57};//UTF-32编码 这里用char、char16_t、char32_t分别表示无符号8位整数，无符号16位整数和无符号32位整数。UTF-8、UTF-16、UTF-32分别以char、char16_t、char32_t作为编码单位。（注： char16_t 和 char32_t 是 C++ 11 标准新增的关键字。如果你的编译器不支持 C++ 11 标准，请改用 unsigned short 和 unsigned long。）“汉字”的UTF-8编码需要6个字节。“汉字”的UTF-16编码需要两个char16_t，大小是4个字节。“汉字”的UTF-32编码需要两个char32_t，大小是8个字节。根据字节序的不同，UTF-16可以被实现为UTF-16LE或UTF-16BE，UTF-32可以被实现为UTF-32LE或UTF-32BE。下面介绍UTF-8、UTF-16、UTF-32、字节序和BOM。[1] utf-8 与ASCII兼容,这使得原来的软件无须或只须做少部份修改,即 可继续使用。 因此,它逐渐成为电子邮件、网页及其他存储或传送文字的应用 中,优先采用的编码。  UTF-8文件的Unicode签名BOM(Byte Order Mark)问题  近日在调测一个UTF8编码的中文Zen Cart网站时遇到一件怪事，网页显示文字正常，用ie的察看源文件（记事本打开）却发现乱码，firefox没有这个问题。经在网上多方查证和多次测试，解决了这个问题，其实是UTF-8文件的Unicode签名BOM(Byte Order Mark)问题。  BOM(Byte Order Mark)，是UTF编码方案里用于标识编码的标准标记，在UTF-16里本来是FF FE，变成UTF-8就成了EF BB BF。这个标记是可选的，因为UTF8字节没有顺序，所以它可以被用来检测一个字节流是否是UTF-8编码的。微软做这种检测，但有些软件不做这种检测，而把它当作正常字符处理。  微软在自己的UTF-8格式的文本文件之前加上了EF BB BF三个字节, windows上面的notepad等程序就是根据这三个字节来确定一个文本文件是ASCII的还是UTF-8的, 然而这个只是微软暗自作的标记, 其它平台上并没有对UTF-8文本文件做个这样的标记。  也就是说一个UTF-8文件可能有BOM，也可能没有BOM，那么怎么区分呢？三种方法。1，用UltraEdit-32打开文件，切换到十六进制编辑模式，察看文件头部是否有EF BB BF。2，用Dreamweaver打开，察看页面属性，看“包括Unicode签名BOM”前面是否有个勾。3，用Windows的记事本打开，选择 “另存为”，看文件的默认编码是UTF-8还是ANSI，如果是ANSI则不带BOM。  我找到Zen Cart的模版文件中的html_header.php，发现文件果然不带BOM，用UltraEdit-32另存为的方式加上BOM后，再上传html_header.php，一切正常。  注意用Convertz把gb2312文件转换成UTF-8文件时，默认设置是不带BOM的。不带BOM可能出现上述乱码问题，但是带 BOM，对于php的include文件要小心，会在php字节流前面多出EF BB BF，提前输出到显示器有可能会带来程序错误。一个解决方案是凡是被include的文件都保存为ANSI，主文件可以是UTF-8。要想把一个文件去掉 BOM，使用UlterEdit打开, 切换到十六进制编辑模式，把最前面三个字节(就是那该死的 EF BB BF)替换为20，保存（注意关闭保存时自动备份的功能），再切换到默认编辑模式，把最前面的三个空格去掉就可以了。  另外还学到一些编码的小知识：所谓的unicode保存的文件实际上是utf-16，只不过恰好跟unicode的码相同而已,但在概念上unicode与utf是两回事，unicode是内存编码表示方案，而utf是如何保存和传输unicode的方案。utf-16还分高位在前 (LE)和高位在后(BE)两种。官方的utf编码还有utf-32，也分LE和BE。非unicode官方的utf编码还有utf-7，主要用于邮件传输。utf-8的单字节部分是和iso-8859-1兼容的，这主要是一些旧的系统和库函数不能正确处理utf-16而被迫出来的，而且对英语字符来说，也节省保存的文件空间（以非英语字符浪费空间为代价）。在iso-8859-1的时候，utf8和iso-8859-1都是用一个字节表示的，当表示其它字符的时候，utf-8会使用两个或三个字节。  The UTF-8 BOM is a sequence of bytes (EF BB BF) that allows the reader to identify the file as an UTF-8 file.  Normally, the BOM is used to signal the endianness of the encoding, but since endianness is irrelevant to UTF-8, the BOM is unnecessary.  According to the Unicode standard, the BOM for UTF-8 files is not recommended:  Short answer: In UTF-8, a BOM is encoded as the bytes EF BB BF at the beginning of the file.  Long answer:  Originally, it was expected that Unicode would be encoded in UTF-16/UCS-2. The BOM was designed for this encoding form. When you have 2-byte code units, it's necessary to indicate which order those two bytes are in, and a common convention for doing this is to include the character U+FEFF as a \"Byte Order Mark\" at the beginning of the data. The character U+FFFE is permanently unassigned so that its presence can be used to detect the wrong byte order.  UTF-8 has the same byte order regardless of platform endianness, so a byte order mark isn't needed. However, it may occur (as the byte sequence EF BB FF) in data that was converted to UTF-8 from UTF-16, or as a \"signature\" to indicate that the data is UTF-8.  stackoverflow上的讨论，知识更多更全  几种编码格式的bom值  UTF-8  EF BB BF  UTF-16  FF FE  UTF-16 big endian  FE FF  UTF-32  FF FE 00 00  UTF-32 big endian  00 00 FE FF UTF-8以字节为单位对Unicode进行编码。从Unicode到UTF-8的编码方式如下：    UTF-8的特点是对不同范围的字符使用不同长度的编码。对于0x00-0x7F之间的字符，UTF-8编码与ASCII编码完全相同。UTF-8编码的最大长度是4个字节。从上表可以看出，4字节模板有21个x，即可以容纳21位二进制数字。Unicode的最大码位0x10FFFF也只有21位。  例1：“汉”字的Unicode编码是0x6C49。0x6C49在0x0800-0xFFFF之间，使用用3字节模板了：1110xxxx 10xxxxxx 10xxxxxx。将0x6C49写成二进制是：0110 1100 0100 1001， 用这个比特流依次代替模板中的x，得到：11100110 10110001 10001001，即E6 B1 89。  例2：Unicode编码0x20C30在0x010000-0x10FFFF之间，使用用4字节模板了：11110xxx 10xxxxxx 10xxxxxx 10xxxxxx。将0x20C30写成21位二进制数字（不足21位就在前面补0）：0 0010 0000 1100 0011 0000，用这个比特流依次代替模板中的x，得到：11110000 10100000 10110000 10110000，即F0 A0 B0 B0。  移动比联通强的原因是记事本无法显示“联通”?  流言：  粉碎：  出现上述问题本质上是：GB2312与UTF-8编码冲突所致。首先普及一下编码常识：  ASCII的霸权：  起初，是一些人想用8个晶体的亮灭表示世间万物，于是产生了“编码”，最早是美国人发明了ASCII字符集(American Standard Code for Information Interchange，美国信息互换标准代码）用来存储英文字符，一个字节8位，可以表示28=256个符号，其中0~32特殊用途（0x20以下）；32~127 存储 英文；128~255为扩展字符集；  GB2312的来历：  中国人想用电脑读写汉字，256个字符不够用怎么办？于是果断舍弃127之后没用的字符，并且在ASCII的基础上规定如果一个字符小于127则表示原字符，即所谓的半角字符，如果连续两个字符大于127则表示一个汉字，即全角字符。这就是GB2312，它实际是ASCII的中文扩展。  都来又有GBK，GB18030，都是对汉字字符集的扩充。  UNICODE的大一统：  一个叫 ISO （国际标谁化组织）的国际组织决定用16位来表示地球上所有文字，于是产生传说中的\"Universal Multiple-Octet Coded Character Set\"，简称 UCS, 俗称 \"UNICODE\"。它规定两个字节为一个字符，英文高8位都是0，但问题是GBK 与UNICODE 在汉字内码编码完全不同。这为谣言埋下了伏笔....  UTF8的传输：  互联网上70%的内容是英文，而UNICODE英文高8位为0，如果采用UNICODE传输无疑造成空间浪费，于是产生UTF8即每次8个位传输数据，当然还有UTF16，UTF32，都是按一定规则转化后的编码形式。  这样就可以解释记事本不能显示的问题了，实际上，“联通”这两个字符的GBK编码具有UTF-8编码的特征，记事本犯下的错误正是将GBK编码存放的记录有“联通”两个字符的文件误认为UTF-8编码的文件。  细节（有兴趣看下）：  UTF-8编码采用1-3个字节对字符进行编码，编码字节数与字符的Unicode编码值有严格的对应关系，让我们回忆下UTF-8编码和Unicode的对应关系吧。  Unicode编码值 UTF-8编码结构  \\u0001 - \\u007E 0XXXXXXX  \\u0080 - \\u07FF 和 \\u0000 110XXXXX 10XXXXXX  \\u0800 - \\uFFFF 1110XXXX 10XXXXXX 10XXXXXX  “联通”这两个字符的GBK编码值是“C1 AA CD A8\"，GBK编码方式使用两个字节对一个字符进行编码，因此以GBK编码方式存放的录有“联通”两个字符的文件的大小为四个字节。接下来分别观察“联通”这两个字符GBK编码值的二进制形式，你有发现有趣的事。  联 GBK 十六进制：C1 AA 二进制：1100 0001,1010 1010  通 GBK 十六进制：C1 AA 二进制：1100 1101,1010 1000  请注意上面二进制数据的着色部分，你想到了什么？对，它们和UTF-8编码结构中的补充位完全一致，UTF-8编码的补充位使得编码值更有规律，而记事本刚好凭借这个特征区分UTF-8编码的文件。存有“联通”两个字符的文件的所有数据都符合这个特征，就是这样，记事本彻底的将文件误认为UTF-8编码的文件。  将错就错，让我们来看看这个错误是怎样收场的。如果把“联通”的GBK编码值当作UTF-8编码值，那文件就成为一个写有数据“C1 AA CD A8”并以UTF-8编码的文件，当使用记事本再次打开的时候会看到什么呢？只要将UTF-8编码转换成Unicode编码就知道了。UTF-8编码“C1 AA CD A8”转换成Unicode编码后，编码值为“6A 00 68 03”（转换方法请参考本Blog中的《字符编码》一文）。0x006A这个Unicode编码值位于\\u0001 - \\u007E之间，若要转换为UTF-8编码，显然只能用一个字节进行编码，因此“联”的GBK编码“C1 AA”虽然特征上貌似UTF-8编码，但它却不对应任何一个UTF-8编码。接着看0x0368这个Unicode编码值，这个值对应了字符“ͨ”，这也正是我们将在记事本中看到的内容。或许你会说我看到的是一个黑色矩形啊，这只是字体的原因，你将字体改为宋体或者其他字体，看到的就是字符“ͨ”。  对于中文字符，UTF-8编码要用三个字节进行编码，因此，如果你使用记事本录入“联通”，然后选择以UTF-8编码方式保存的话，文件大小应为9个字节（包含三个字节的开头数据），而同样的文件GBK编码却是4个字节。 utf-16  UTF-16编码以16位无符号整数为单位。我们把Unicode  unicode  编码记作U。编码规则如下：  如果U<0x10000，U的UTF-16编码就是U对应的16位无符号整数（为书写简便，下文将16位无符号整数记作WORD）。  如果U≥0x10000，我们先计算U'=U-0x10000，然后将U'写成二进制形式：yyyy yyyy yyxx xxxx xxxx，U的UTF-16编码（二进制）就是：110110yyyyyyyyyy 110111xxxxxxxxxx。  为什么U'可以被写成20个二进制位？Unicode的最大码位是0x10ffff，减去0x10000后，U'的最大值是0xfffff，所以肯定可以用20个二进制位表示。例如：Unicode编码0x20C30，减去0x10000后，得到0x10C30，写成二进制是：0001 0000 1100 0011 0000。用前10位依次替代模板中的y，用后10位依次替代模板中的x，就得到：1101100001000011 1101110000110000，即0xD843 0xDC30。  按照上述规则，Unicode编码0x10000-0x10FFFF的UTF-16编码有两个WORD，第一个WORD的高6位是110110，第二个WORD的高6位是110111。可见，第一个WORD的取值范围（二进制）是11011000 00000000到11011011 11111111，即0xD800-0xDBFF。第二个WORD的取值范围（二进制）是11011100 00000000到11011111 11111111，即0xDC00-0xDFFF。  为了将一个WORD的UTF-16编码与两个WORD的UTF-16编码区分开来，Unicode编码的设计者将0xD800-0xDFFF保留下来，并称为代理区（Surrogate）： 这里的意思是 unicode编码表中0xD800-0xdfff 是没有被赋予任何的字符的，永远不会有单个字符落在这个区域。    下边这段高替代位， 低替代位的知识会很难懂， 所以我在最后补充了另外一篇知识。  高位替代就是指这个范围的码位是两个WORD的UTF-16编码的第一个WORD。低位替代就是指这个范围的码位是两个WORD的UTF-16编码的第二个WORD。那么，高位专用替代是什么意思？我们来解答这个问题，顺便看看怎么由UTF-16编码推导Unicode编码。  如果一个字符的UTF-16编码的第一个WORD在0xDB80到0xDBFF之间，那么它的Unicode编码在什么范围内？我们知道第二个WORD的取值范围是0xDC00-0xDFFF，所以这个字符的UTF-16编码范围应该是0xDB80 0xDC00到0xDBFF 0xDFFF。我们将这个范围写成二进制：  1101101110000000 11011100 00000000 - 1101101111111111 1101111111111111  按照编码的相反步骤，取出高低WORD的后10位，并拼在一起，得到  1110 0000 0000 0000 0000 - 1111 1111 1111 1111 1111  即0xe0000-0xfffff，按照编码的相反步骤再加上0x10000，得到0xf0000-0x10ffff。这就是UTF-16编码的第一个WORD在0xdb80到0xdbff之间的Unicode编码范围，即平面15和平面16。因为Unicode标准将平面15和平面16都作为专用区，所以0xDB80到0xDBFF之间的保留码位被称作高位专用替代[1]。  四字节的UTF-16字符的性质与计算  JavaScript中的字符串是以UTF-16为代码单元。通常我们使用的字符范围都在Unicode值0x10000以内，他们对应的UTF-16就是它们自身。但Unicode中也存在这个范围之外的字符，这时候就需要两个UTF-16字符来描述。这些字符在统计时会被作为两个字符。  　　比如下面这个字符，虽然只有一个字，但却会统计出两个字符。  因为字符串的length表示的并不是字符个数，而是UTF-16的单元个数。Unicode为UTF-16预留了两块区域，称为“高位替代区”和“低位替代区”。这两个区域的字符单独使用是每一意义的，甚至在某些地方都无法单独使用他们，比如内置的URL转义函数就无法转换这样的字符  比如说直接使用encodeURIComponent(\"\\uD841\") 是会直接报错的  在正则表达式中，其也是被作为两个字符来处理的  /^.$/.test('') false  /^..$/.test('') true  使用charCodeAt的时候也会把它作为两个字符来处理。这些把它当做两个字符处理的情况会分别处理它的“高位替代符”和“低位替代符”。  维基百科访问地址 utf-32  UTF-32  UTF-32编码以32位无符号整数为单位。Unicode的UTF-32编码就是其对应的32位无符号整数。  字节序  字节序有两种，分别是“大端”（Big Endian, BE）和“小端”（Little Endian, LE）。  根据字节序的不同，UTF-16可被实现为UTF-16LE或UTF-16BE，UTF-32可被实现为UTF-32LE或UTF-32BE。例如：    Unicode标准建议用BOM（Byte Order Mark）来区分字节序，即在传输字节流前，先传输被作为BOM的字符“零宽无中断空格”。这个字符的编码是FEFF，而反过来的FFFE（UTF-16）和FFFE0000（UTF-32）在Unicode中都是未定义的码位，不应该出现在实际传输中。  最后得出的结论： • 新产品上线尽量使用UTF-8编码,避免多编码存在的混乱局面, 并且满足国际化; • 根据业务需求和容量,避免不必要的浪费,例如日志的存储。 • 发送HTTP请求的时候,注意你的字符编码,一定要与上下游接 收方保持一致。"},{"title":"jekyll安装全文静态索引插件","url":"/all/web/ideas/2014/04/22/jekyll-plugins-nokogiri.html","date":"2014-04-22 00:00:00 +0800","categories":["all","web","ideas"],"body":"插件的使用很简单， 按照github上 jekyll_lunr_js_search 官网说明一步步来就好了， 只是gem 依赖 nokogiri的安装太蛋疼了 这里我们集中火力 nokogiri的安装 在windows上安装nokogiri的时候报错 gem install nokogiri --pre 一行命令搞定， 安装开发中的nokogiri即可， 此时 2014-04-22日, 也许等nokogiri 外发了就不会有问题啦"},{"title":"adobe reader顽固残余文件删除方法","url":"/all/web/ideas/2014/04/23/adobe-reader-uninstall.html","date":"2014-04-23 00:00:00 +0800","categories":["all","web","ideas"],"body":"最近发现电脑里曾今删掉了的Adobe还有一些文件(一个叫CMap的文件夹,里面还有很多诸如Adobe- GB1-0、GBK2K-H)残留了下来,用unlocker或者360文件粉碎机都删不掉(权限不够,只有System有 删除权限,Administrator都无权删除),网上找了一些资料提到了要改用户权限,可是其实win7系统下权 限也不是能随便改的(那些权限选项是灰色不可用的)。 在线访问地址 我亲试有效"},{"title":"如何强行弹出窗口","url":"/all/web/2014/04/23/browser-force-window.html","date":"2014-04-23 00:00:00 +0800","categories":["all","web"],"body":"真是道高一尺魔高一丈。有各种工具来强行拦截弹出窗口，就有别的方法来强行弹出。 一个可以不被广告拦截器拦截的弹出窗口，参见地址：http://www.iecn.net/forum/showthread.php?s=&threadid=14903 　　ForceWindow.iclass.js代码如下（使用、讲解、相关说明全部在注释中）： /** 本程序可自由复制、修改、传播，不得删除以下信息。如用于商业用途须经原作者同意方可使用。 程序名称：ForceWindow(@iClass.JS) 描　　述：“冲破”广告拦截软件，强制弹出窗口。 版　　本：1.0.0 创建时间：2004年1月19日 修改时间：2004年1月19日 文件名称：ForceWindow.iclass.js 作　　者：钟钟 邮箱地址：zz@iecn.net zz315@163.com 版权声明：本程序属于iClass.JS，版权归作者所有。 有关iClass计划详见：http://www.iecn.net/forum/showthread.php?threadid=14811 */ /** 定义ForceWindow类构造函数 无参数 无返回值 */ function ForceWindow () { } /** 定义open方法 参数sUrl：字符串，要打开窗口的URL。 无返回值 */ ForceWindow.prototype.open = function (sUrl) { } /** 实例化一个ForceWindow对象并做为window对象的一个子对象以方便调用 定义后可以这样来使用：window.force.open(\"URL\"); */ window.force = new ForceWindow(); /** 用本程序弹出的窗口将不会被广告拦截软件拦截，但有一个缺点：你无法象对window.open弹出的窗口那样对外观进行定制。 你当然也可以在使用前实例化一个ForceWindow对象： var myWindow = new ForceWindow(); 这样来使用： myWindow.open(\"URL\"); 本程序测试通过的浏览器：IE 5+、Firefox 1.0、Mozilla 1.7.5、Netscape 7.2、Opera 7.23 友情提示：如果你将本程序用于强制弹出广告，请更多的想想浏览者的感受！ */"},{"title":"回车换行符\\r\\n1310","url":"/all/web/2014/04/23/carriage-return-line-feed.html","date":"2014-04-23 00:00:00 +0800","categories":["all","web"],"body":"\\r = CR (Carriage Return) // Used as a new line character in Classic Mac A carriage return means moving the cursor to the beginning of the line \\n = LF (Line Feed) // Used as a new line character in Mac OS, linux . A line feed means moving one line forward \\r\\n = CR + LF // Used as a new line character in Windows they're \\n 10 and  \\r 13 respectively; The separation comes from typewriter times, when you turned the wheel to move the paper to change the line and moved the carriage to restart typing on the beginning of a line. This was two steps. Windows editors often still use the combination of both in text files. Unix uses mostly only the \\n. in Unix and all Unix-like systems, \\n is the code for end-of-line, \\r means nothing special as a consequence, in C and most languages that somehow copy it (even remotely), \\n is the standard escape sequence for end of line (translated to/from OS-specific sequences as needed) in old Mac systems (pre-OS X), \\r was the code for end-of-line instead in Windows (and many old OSs), the code for end of line is 2 characters, `\\r\\n', in this order as a (surprising;-) consequence (harking back to OSs much older than Windows) \\r\\n is the standard line-termination for text formats on the Internet for electromechanical teletype-like \"terminals\", \\r commands the carriage to go back leftwards until it hits the leftmost stop (a slow operation), \\n commands the roller to roll up one line (a much faster operation) -- that's the reason you always have \\r before \\n, so that the roller can move while the carriage is still going leftwards!-) for character-mode terminals (typically emulating even-older printing ones as above), in raw mode, \\r and \\n act similarly (except both in terms of the cursor, as there is no carriage or roller;-) In practice, in the modern context of writing to a text file, you should always use \\n (the underlying runtime will translate that if you're on a weird OS, e.g., Windows;-). The only reason to use \\r is if you're writing to a character terminal (or more likely a \"console window\" emulating it) and want the next line you write to overwrite the last one you just wrote (sometimes used for goofy \"ascii animation\" effects of e.g. progress bars) -- this is getting pretty obsolete in a world of GUIs, though;-). Environment.NewLine = any of the above code based on the operating system // .Net provides the Environment class which provides many data based on Operating Systems, so if the application is built in Windows, and you use CR + LF (\"\\n\\r\" instead of Environment.NewLine) as new line character in your strings, and then MS creates a VM for running .Net applications in Unix, then there will be problem. So, you should always use Environment.NewLine when you want a new line character."},{"title":"html entity html 实体 转义","url":"/all/web/2014/04/23/html-entity.html","date":"2014-04-23 00:00:00 +0800","categories":["all","web"],"body":"html实体表在线查询 曾经看过上边这样一段代码， 不明白为啥实体会写成 &#x27的形式， 后来明白了， 看代码中注释。 特此记录！"},{"title":"pgsql安装后默认的用户名，数据库名","url":"/all/web/database/pgsql/2014/04/23/install-pgsq-default-account.html","date":"2014-04-23 00:00:00 +0800","categories":["all","web","database","pgsql"],"body":"默认数据库名为postgres，用户名为电脑的用户名！密码为空！"},{"title":"URL编码规范","url":"/all/web/2014/04/23/uri-encode.html","date":"2014-04-23 00:00:00 +0800","categories":["all","web"],"body":"URL(Uniform Resource Locators) 统⼀一资源定位符,RFC⽂文献1738中定义了它详细的规范(1994年12月) 只有字⺟母和数字[0-9a-zA-Z]、⼀一些特殊符号“-_.~”[不包括双引号]、以及某些保留字,才可以不经过编码直接用于URL。 这意味着如果URL中有汉字， 就必须编码后使用。 但是⿇麻烦的是, RFC 1738没有规定具体的编码⽅方法,⽽而是交给应⽤用程序(浏览器)⾃自 ⼰己决定。这导致“URL编码”成为了⼀一个混乱的领域。 网络路径的编码，统一使用的是utf-8编码 如： find.qq.com/腾讯/ querystring包含汉字的情况,采⽤用OS默认的字符编码,如 XP下默认GB2312,MacOS下是utf-8编码。 GET和POST方法生成的编码,采用的是当前网页声明的编码。 在XHR,IE总是采用GB2312编码,而非IE总是采⽤用utf-8编码 所以我们一定要做URL主动编码： 不要依赖浏览器默认的编码,在传输数据之前,主动采用js方法对url进行编码,js可以用来编码的函数有2个 最后得出的结论： • 新产品上线尽量使用UTF-8编码,避免多编码存在的混乱局面, 并且满足国际化; • 根据业务需求和容量,避免不必要的浪费,例如日志的存储。 • 发送HTTP请求的时候,注意你的字符编码,一定要与上下游接 收方保持一致。"},{"title":"web各种小知识","url":"/all/web/2014/04/23/vary-web-knowledge.html","date":"2014-04-23 00:00:00 +0800","categories":["all","web"],"body":"web各种小知识"},{"title":"win7设置自动关机","url":"/all/web/ideas/2014/04/23/win7-auto-shutdown.html","date":"2014-04-23 00:00:00 +0800","categories":["all","web","ideas"],"body":"在cmd里再输入 at 23:00 shutdown -s 具体时间自己定 设置一　定时自动关机 　　假如你需要电脑在２０：２０自动关机，那么只需要在“开始”菜单中选择“运行”，然后输入at 20:20 Shutdown -s，点击“确定”即可，必须先启动Task Scheduler服务。这样当电脑系统时间到了２０：２０时，电脑就会自动出现“系统关机”的对话框，３０秒以后就会自动关机，这３０秒是为了让用户在关机前保存现在运行的工作，以免造成不必要的损失。 　　注意：-s参数是指本地计算机。 设置二　倒计时自动关机 　　假如你需要电脑在１０分钟以后自动关机，那么只需要在“开始”菜单中选择“运行”，然后输入Shutdown -s -t 600，点击“确定”即可。这样电脑即开始倒计时，１０分钟以后电脑将会自动关机。 　　注意：-t参数是倒计时自动关机的命令，600参数是１０分钟即６００秒。 设置三　取消自动关机 　　假如你已经设置了自动关机，但又改变了主意，不必自动关机了，那么只需要在“开始”菜单中选择“运行”，然后输入Shutdown -a，点击“确定”即可。这样即关闭了已经设置的自动关机。 　　注意：-a参数是取消自动关机的命令。 设置四　定时重新启动 　　假如你需要电脑在２０：２０重新启动，那么只需要在“开始”菜单中选择“运行”，然后输入at 20:20 Shutdown -r，点击“确定”即可。这样当电脑系统时间到了２０：２０时，电脑就会自动重新启动了。 　　注意：-r参数是重新启动的命令。 设置五　倒计时重新启动 　　假如你需要电脑在１０分钟以后重新启动，那么只需要在“开始”菜单中选择“运行”，然后输入。 　　Shutdown -r -t 600，点击“确定”即可。这样电脑即开始倒计时，１０分钟以后电脑将会重新启动 设置六　自动关机&重新启动之前提示"},{"title":"Windows MSDN、OEM、RTM、VOL等各版本的区别","url":"/all/web/ideas/2014/04/23/windows-msdn-oem-rtm-vol.html","date":"2014-04-23 00:00:00 +0800","categories":["all","web","ideas"],"body":"(一)MSDN (Microsoft Developer Network)版 MSDN软件是微软公司面向软件开发者的一种版本。MSDN 涵盖了所有可以被开发扩充的平台和应用程序，如微软公司的百科全书 Encarta，或者是各种游戏，是不包括在 MSDN 之内的，因为这些产品直接面向最终用户，没有进行程序开发的必要。 MSDN 在 Operating System 以上的等级都有附微软的软件授权，根据 MSDN 的使用者授权合约(EULA)，软件只授权给使用 MSDN 的那一位开发人员，专供开发与测试之用，其他人不可使用 MSDN 所附软件。包含企业不能用 MSDN附的 SQL Server Enterprise Edition 做为生产环境中的数据库服务器；秘书不能使用 MSDN 所附的 Office2007 等等。 (二) OEM(Original Equipment Manufacturer)版 OEM软件只能随机器出货，不能零售，所以也叫做随机版。OEM软件只能全新安装，不能从旧有*作系统升级。 如果买笔记型计算机或品牌计算机就会有随机版软件。包装不像零售版精美，通常只有一片cd和说明书(授权书)。这种系统通常会少一些驱动，而且目前的OEM软件很少放在光盘里能给你安装，要么就是恢复盘，要么就是硬盘镜像。 (三) RTM(Release to Manufacturing)版 软件在正式在零售商店上架前，需要一段时间来压片，包装、配销，所以程序代码必须在正式发行前一段时间就要完成，这个完成的程序代码叫做 final.code，程序代码开发完成之后，要将母片送到工厂大量压片，这个版本就叫做RTM版。 RTM版的程序码和正式版一样。但是和正式版也有不一样的地方：例如正式版中的oem不能升级安装，升级版要全新安装的话会检查旧版*作系统光盘等，这些就是rtm和正式版不同的地方，但是它们的主要程序代码都是一样的。严格的说这种版本还是属于fpp零售版，需要激活。 (四)RC(Release Candidate)版 　　从微软的惯例来看推出RC版作系统就代表正式版的作系统已经离我们不远了，因为微软作系统的开发步骤是这样的：内部测试->alpha公测->beta公测->RC版->正式版上市；通常微软的RC版本筛选会经历2-3个过程，也就是说微软会推出RC1、RC2或者RC3的作系统，而随后就是正式版作系统上市了，因此通常来看RC1版作系统已经同最终零售版*作系统相差无几了。 (五) VOL(Volume Licensing for Organizations) 版 　　中文即团体批量许可证，根据这个许可，当企业或者政府需要大量购买一软件时可以获得优惠。这种产品的光盘的卷标都带有\"VOL\"字样，就取\"Volume\"前3个字母，以表明是批量。这种版本根据购买数量等又细分为“开放式许可证”(OpenLicense)、“选择式许可证(Select License)”、“企业协议(EnterpriseAgreement)”、“学术教育许可证(Academic Volume Licensing)”等5种版本，上海政府 VOL版XP就是这种批量购买的版本。根据 VOL 计划规定， VOL 产品是不需要激活的(无论升级到SP1还是SP2)。 (六) FPP(Full Packaged Product)零售版 　　FPP就是零售版（盒装软件），这种产品的光盘的卷标都带有\"FPP\"字样，比如英文WXPPro的FPP版本的光盘卷标就是WXPFPP_EN，其中WX表示是Windows XP，P是Professional（H是Home），FPP表明是零售版本，EN是表明是英语。获得途径除了在商店购买之外，（H是Home），FPP表明是零售版本，EN是表明是英语。获得途径除了在商店购买之外，某些MSDN用户也可以得到。"},{"title":"ERWin相关资料","url":"/all/web/database/2014/04/24/ERWin.html","date":"2014-04-24 00:00:00 +0800","categories":["all","web","database"],"body":"以下资料都已pdf的形式存储在calibre书库 ER--Model的表示方式 ERWin图形教程"},{"title":"UML和Rose各种资料","url":"/all/web/database/2014/04/24/UML-Rose.html","date":"2014-04-24 00:00:00 +0800","categories":["all","web","database"],"body":"以下资料都已pdf的形式存储在calibre书库 UML and Rose教程-刘炬光备注：主要介绍的是uml中的概念而非rose的操作 UML和Rational Rose 讲的比较详细，271页。直接从rational rose的四种视图讲开。 UML4+1视图模型     use case view     logical view     process view     deployment view     implementation view ROSE的使用-刘炬光备注（主讲如何发布你的设计，绘制用例-活动图，对软件进行options设置）"},{"title":"如何禁用记事本功能","url":"/all/web/ideas/2014/04/24/forbidden-notepad.html","date":"2014-04-24 00:00:00 +0800","categories":["all","web","ideas"],"body":"可以使用组策略禁止记事本运行。 1，开始->运行->gpedit.msc->计算机配置->windows设置->安全设置->软件限制策略 2，右键点软件限制策略->创建软件限制策略 3，点其他规则->右键新建路径规则->在“路径”下的空白输入框中“\\%windir%\\notepad.exe“（或者c盘是系统盘的情况下：c:\\windows\\notepad.exe)->在“安全级别”中选择“不允许” 附：如果你要限制.txt的程序打开，可以在路径中输入*.txt"},{"title":"java实现发送邮件短信","url":"/all/web/java/2014/04/24/java-send-email-SMS.html","date":"2014-04-24 00:00:00 +0800","categories":["all","web","java"],"body":""},{"title":"java通过jdbc连接各种数据库,jdbc知识小总结","url":"/all/web/java/2014/04/24/jdbc.html","date":"2014-04-24 00:00:00 +0800","categories":["all","web","java"],"body":"java 通过jdbc连接各种数据库  Class.forName( \"org.gjt.mm.mysql.Driver\" );  cn = DriverManager.getConnection( \"jdbc:mysql://MyDbComputerNameOrIP:3306/myDatabaseName\", sUsr, sPwd );  Class.forName( \"org.postgresql.Driver\" );  cn = DriverManager.getConnection( \"jdbc:postgresql://MyDbComputerNameOrIP/myDatabaseName\", sUsr, sPwd );  Class.forName( \"oracle.jdbc.driver.OracleDriver\" );  cn = DriverManager.getConnection( \"jdbc:oracle:thin:@MyDbComputerNameOrIP:1521:ORCL\", sUsr, sPwd );  Class.forName( \"com.sybase.jdbc2.jdbc.SybDriver\" );  cn = DriverManager.getConnection( \"jdbc:sybase:Tds:MyDbComputerNameOrIP:2638\", sUsr, sPwd );  //(Default-Username/Password: \"dba\"/\"sql\")  Class.forName( \"net.sourceforge.jtds.jdbc.Driver\" );  cn = DriverManager.getConnection( \"jdbc:jtds:sqlserver://MyDbComputerNameOrIP:1433/master\", sUsr, sPwd );  Class.forName( \"com.microsoft.jdbc.sqlserver.SQLServerDriver\" );  cn = DriverManager.getConnection( \"jdbc:microsoft:sqlserver://MyDbComputerNameOrIP:1433;databaseName=master\", sUsr, sPwd );  Class.forName( \"sun.jdbc.odbc.JdbcOdbcDriver\" );  Connection cn = DriverManager.getConnection( \"jdbc:odbc:\" + sDsn, sUsr, sPwd );  8.DB2(新添加)  Class.forName(\"com.ibm.db2.jdbc.net.DB2Driver\");  String url=\"jdbc:db2://192.9.200.108:6789/SAMPLE\"  cn = DriverManager.getConnection( url, sUsr, sPwd );  补充  Microsoft SQL Server series (6.5, 7.x and 2000) and Sybase 10  JDBC Name: jTDS  URL: http://jtds.sourceforge.net/  Version: 0.5.1  Download URL: http://sourceforge.net/project/showfiles.php?group_id=33291  语法:  Class.forName(\"net.sourceforge.jtds.jdbc.Driver \");  Connection con = DriverManager.getConnection(\"jdbc:jtds:sqlserver://host:port/database\",\"user\",\"password\");  or  Connection con = DriverManager.getConnection(\"jdbc:jtds:sybase://host:port/database\",\"user\",\"password\");  Postgresql  JDBC Name: PostgreSQL JDBC  URL: http://jdbc.postgresql.org/  Version: 7.3.3 build 110  Download URL: http://jdbc.postgresql.org/download.html  语法:  Class.forName(\"org.postgresql.Driver\");  Connection con=DriverManager.getConnection(\"jdbc:postgresql://host:port/database\",\"user\",\"password\");  IBM AS400主机在用的JDBC语法  有装V4R4以上版本的Client Access Express  可以在C:Program FilesIBMClient Accessjt400lib  找到 driver 档案 jt400.zip，并更改扩展名成为 jt400.jar  语法  java.sql.DriverManager.registerDriver (new com.ibm.as400.access.AS400JDBCDriver ());  Class.forName(\"com.ibm.as400.access.AS400JDBCConnection\");  con = DriverManager.getConnection(\"jdbc:as400://IP\",\"user\",\"password\");  informix  Class.forName(\"com.informix.jdbc.IfxDriver\").newInstance();  String url =  \"jdbc:informix-sqli://123.45.67.89:1533/testDB:INFORMIXSERVER=myserver;  user=testuser;password=testpassword\";  Lib： jdbcdrv.zipClass.forName( \"com.sybase.jdbc.SybDriver\" )url=\"jdbc:sybase:Tds:127.0.0.1:2638/asademo\";SybConnection connection= (SybConnection)DriverManager.getConnection(url,\"dba\",\"sql\");  补充两个  SAP DB  Class.forName (\"com.sap.dbtech.jdbc.DriverSapDB\");  java.sql.Connection connection = java.sql.DriverManager.getConnection ( \"jdbc:sapdb://\" + host + \"/\" + database_name,user_name, password)  InterBase  String url = \"jdbc:interbase://localhost/e:/testbed/database/employee.gdb\";  Class.forName(\"interbase.interclient.Driver\");  //Driver d = new interbase.interclient.Driver (); / this will also work if you do not want the line above /  Connection conn = DriverManager.getConnection( url, \"sysdba\", \"masterkey\" );  HSqlDB  url: http://hsqldb.sourceforge.net/  driver: org.hsqldb.jdbcDriver  连接方式有4种，分别为：  con-str（内存）: jdbc:hsqldb.  con-str（本地）: jdbc:hsqldb:/path/to/the/db/dir  con-str（http）: jdbc:hsqldb:http://dbsrv  con-str（hsql）: jdbc:hsqldb:hsql://dbsrv  SAP DB  Class.forName (\"com.sap.dbtech.jdbc.DriverSapDB\");  java.sql.Connection connection = java.sql.DriverManager.getConnection ( \"jdbc:sapdb://\" + host + \"/\" + database_name,user_name, password)  InterBase  String url = \"jdbc:interbase://localhost/e:/testbed/database/employee.gdb\";  Class.forName(\"interbase.interclient.Driver\");  //Driver d = new interbase.interclient.Driver (); / this will also work if you do not want the line above /  Connection conn = DriverManager.getConnection( url, \"sysdba\", \"masterkey\" );  Microsoft SQL Server series (6.5, 7.x and 2000) and Sybase 10  JDBC Name: jTDS  URL: http://jtds.sourceforge.net/  Version: 0.5.1  Download URL: http://sourceforge.net/project/showfiles.php?group_id=33291  语法:  Class.forName(\"net.sourceforge.jtds.jdbc.Driver \");  Connection con = DriverManager.getConnection(\"jdbc:jtds:sqlserver://host:port/database\",\"user\",\"password\");  or  Connection con = DriverManager.getConnection(\"jdbc:jtds:sybase://host:port/database\",\"user\",\"password\");  Postgresql  JDBC Name: PostgreSQL JDBC  URL: http://jdbc.postgresql.org/  Version: 7.3.3 build 110  Download URL: http://jdbc.postgresql.org/download.html  语法:  Class.forName(\"org.postgresql.Driver\");  Connection con=DriverManager.getConnection(\"jdbc:postgresql://host:port/database\",\"user\",\"password\");  IBM AS400主机在用的JDBC语法  有装V4R4以上版本的Client Access Express  可以在C:Program FilesIBMClient Accessjt400lib  找到 driver 档案 jt400.zip，并更改扩展名成为 jt400.jar  语法  java.sql.DriverManager.registerDriver (new com.ibm.as400.access.AS400JDBCDriver ());  Class.forName(\"com.ibm.as400.access.AS400JDBCConnection\");  con = DriverManager.getConnection(\"jdbc:as400://IP\",\"user\",\"password\");  informix数据库  Class.forName(\"com.informix.jdbc.IfxDriver\").newInstance();  String url =  \"jdbc:informix-sqli://123.45.67.89:1533/testDB:INFORMIXSERVER=myserver;  user=testuser;password=testpassword\";  Sybase数据库  Lib：jdbcdrv.zip  Class.forName( \"com.sybase.jdbc.SybDriver\" )  url=\"jdbc:sybase:Tds:127.0.0.1:2638/asademo\";  SybConnection connection= (SybConnection)DriverManager.getConnection(url,\"dba\",\"sql\"); jdbc对于自增字段的处理要使用default"},{"title":"使用jdbc连接sqlserver2005","url":"/all/web/database/sqlserver/2014/04/24/jdbc-sqlserver2005.html","date":"2014-04-24 00:00:00 +0800","categories":["all","web","database","sqlserver"],"body":"原帖地址"},{"title":"mysql中long类型的时间转化","url":"/all/web/database/mysql/2014/04/24/mysql-long-time-interchange.html","date":"2014-04-24 00:00:00 +0800","categories":["all","web","database","mysql"],"body":"在开放中，有时候为方便将日期时间以long类型(秒钟)存在数据库，这里要查询数据就需要进行转换。  在mysql中只要使用from_unixtime函数就可以了。  附mysql的两个转换函数：  在mysql 数据库中，“2009-09-15 00：00：00”转化为列为长整型的函数：  select unix_timstamp(\"2009-09-15 00：00：00\")*1000,  这里要注意，mysql数据库中的长整型，比java中的长整型少了秒后面的毫秒数，所以要乘以1000，这样只有几毫秒之差  2、在mysql数据库中，“1252999488000”（java中的long型数据）转化为日期：  select from_unixtime(1252999488);  注意：要将最后三位去掉"},{"title":"pgsql各种杂乱资料","url":"/all/web/database/pgsql/2014/04/24/pgsql-vary.html","date":"2014-04-24 00:00:00 +0800","categories":["all","web","database","pgsql"],"body":"以下资料都已pdf的形式存储在calibre书库 PostgreSQL的触发器 PostgreSql事务操作 postgresql的视图更新指令"},{"title":"smartgit/hg安装报错","url":"/all/web/ideas/2014/04/24/smartgit-hg-install.html","date":"2014-04-24 00:00:00 +0800","categories":["all","web","ideas"],"body":"一直觉得用命令行版本的git太蛋疼了， 所以找了一个口碑非常不错的git客户端，而且个人使用免费 安装的时候报错，连接远程的github的时候 ava.security.cert.CertificateException: SHA fingerprint of certificate does not match. Expected: B1:4B:A1:6F:5C:EE:28:DA:C4:86:CD:D9:F2:80:8F:2E:A7:4A:51:F4 Actual: CF:05:98:89:CA:FF:8E:D8:5E:5C:E0:C2:E4:F7:E6:C3:C7:50:DD:5C This may either mean that the server certificate has changed or that you are spoofed. 搜了一下解决方案是： From [1]: to fix SmartGit 5.0.7.1 (and older) add following line to smartgit.properties (in the SmartGit settings directory, see About dialog): smartgit.hostingProvider.bitbucket.sslFingerprint=37:A8:0E:13:87:DA:13:C3:B8:35:6F:84:EF:74:D2:38:B1:AC:59:9B smartgit.hostingProvider.github.sslFingerprint=37:A8:0E:13:87:DA:13:C3:B8:35:6F:84:EF:74:D2:38:B1:AC:59:9B After restarting SmartGit, connection will work again. 也有人说，可以通过升级客户端解决， 所以我又在官网下了最新版，确实没有报上边的问题， 但我觉得上边的方案应该也是可行的， 安装好以后在about里可以找到settings的目录，里边有smartgit.properties 文件"},{"title":"tomcat报错的各种情况","url":"/all/web/java/2014/04/24/tomcat-error.html","date":"2014-04-24 00:00:00 +0800","categories":["all","web","java"],"body":"一般是因为项目中的lib下的jar包跟tomcat下的lib下的jar包有重复，用lib下的重复或者冲突的jar包代替tomcat下的jar包或者删除项目中lib下重复或者冲突的jar包（如果可以的话） tomcat5下jsp出现getOutputStream() has already been called for for this response  在tomcat5下jsp中出现此错误一般都是在jsp中使用了输出流（如输出图片验证码，文件下载等），  没有妥善处理好的原因。  具体的原因就是  在tomcat中jsp编译成servlet之后在函数jspService(HttpServletRequest request, HttpServletResponse response)的最后  有一段这样的代码  finally {        if (jspxFactory != null) jspxFactory.releasePageContext(jspx_page_context);      }  这里是在释放在jsp中使用的对象，会调用response.getWriter(),因为这个方法是和  response.getOutputStream()相冲突的！所以会出现以上这个异常。  然后当然是要提出解决的办法，其实挺简单的（并不是和某些朋友说的那样--  将jsp内的所有空格和回车符号所有都删除掉），  在使用完输出流以后调用以下两行代码即可：  out.clear();  out = pageContext.pushBody();  最后这里是一个输出彩色验证码例子（这样的例子几乎随处可见）  imag.jsp  <%@ page  import=\"java.awt.,java.awt.image.,java.util.,javax.imageio.\" %>  <%@ page import=\"java.io.OutputStream\" %>  <%!  Color getRandColor(int fc,int bc){  Random random = new Random();  if(fc>255) fc=255;  if(bc>255) bc=255;  int r=fc+random.nextInt(bc-fc);  int g=fc+random.nextInt(bc-fc);  int b=fc+random.nextInt(bc-fc);  return new Color(r,g,b);  }  %>  <%  try{  response.setHeader(\"Pragma\",\"No-cache\");  response.setHeader(\"Cache-Control\",\"no-cache\");  response.setDateHeader(\"Expires\", 0);  int width=60, height=20;  BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);  OutputStream os=response.getOutputStream();  Graphics g = image.getGraphics();  Random random = new Random();  g.setColor(getRandColor(200,250));  g.fillRect(0, 0, width, height);  g.setFont(new Font(\"Times New Roman\",Font.PLAIN,18));  g.setColor(getRandColor(160,200));  for (int i=0;i<155;i++)  {  int x = random.nextInt(width);  int y = random.nextInt(height);  int xl = random.nextInt(12);  int yl = random.nextInt(12);  g.drawLine(x,y,x+xl,y+yl);  }  String sRand=\"\";  for (int i=0;i<4;i++){  String rand=String.valueOf(random.nextInt(10));  sRand+=rand;  g.setColor(new Color(20+random.nextInt(110),20+random.nextInt(110),20+random.nextInt(110)));  g.drawString(rand,13*i+6,16);  }  session.setAttribute(\"rand\",sRand);  g.dispose();  ImageIO.write(image, \"JPEG\",os);  os.flush();  os.close();  os=null;  response.flushBuffer();  out.clear();  out = pageContext.pushBody();  }  catch(IllegalStateException e)  {  System.out.println(e.getMessage());  e.printStackTrace();  }%>"},{"title":"图解linux下top命令的使用","url":"/all/web/linux/2014/04/24/top-linux.html","date":"2014-04-24 00:00:00 +0800","categories":["all","web","linux"],"body":"top命令经常用来监控linux的系统状况,比如cpu、内存的使用,程序员基本都知道这个命令,但 比较奇怪的是能用好它的人却很少,例如top监控视图中内存数值的含义就有不少的曲解。 本文通过一个运行中的WEB服务器的top监控截图,讲述top视图中的各种数据的含义,还包括视 图中各进程(任务)的字段的排序。 文章在线地址"},{"title":"ubuntu常用配置","url":"/all/web/linux/2014/04/24/ubuntu-general-configuration.html","date":"2014-04-24 00:00:00 +0800","categories":["all","web","linux"],"body":"在使用adsl上网的时候网络经常自己断掉 Sudo gedit /etc/default/grub 修改GRUB_CMDLINE_LINUX=”” 为 GRUB_CMDLINE_LINUX=”noapic” 最后保存，更新grub sudo update-grub 右上角的网络图标消失 sudo service network-manager stop sudo rm /var/lib/NetworkManager/NetworkManager.state sudo service network-manager start sudo vi /etc/NetworkManager/nm-system-settings.conf 将false改为true sudo service network-manager restart 这样做的原理：  ubuntu里面有两套网络连接的管理方案   1./etc/network/interfaces   2.network-manager 而这两套方案是冲突的，不能共存。 第一套方案适合没有X的环境，如服务器，或者那些完全不需要改动连接的场所。 第二套方案适合有X环境，特别是笔记本，网络连接环境经常变化的场景。 他们两个为了避免冲突又能共享配置，就有了下面的配置方案。 当network-manager发现/etc/network/interfaces被改动的时候，则关闭自己，除非manager设为真。 当manager设为真时，/etc/network/interfaces则不生效了。 使用中国电信的协同拨号器，之前要先建立一个连接，只允许本地连接，把本地连接连上以后       sudo dhclient 获得ip       sudo Dial 连接       sudo Hangup   断开 禁用U盘，移动设备插入以后的自动加载 alt+F2,打开gconf-editor,依次打开apps-nautilus(这个是gnome环境下的file manager)-perferences     将media_automount 和 media_automount_open两项的勾去掉。 安装rar解压工具 sudo apt-get install rar unrar linux下出现rar解压出现乱码的解决问题 因为在windows平台下打包的rar文件，文件名用的是gbk编码，而在linux平台下默认的是unicode编码，所以需要在解压之前用conmv将文件名从一种编码格式转化成另外一种编码格式。 安装conmv：   sudo apt-get install convmv 转换 convmv * -f gbk –t utf8 –-notest   *是要转换的文件  --notest是对文件进行重命名 直接安装conmv是安装不上的，还需要在软件源列表中添加一句 deb http://ubuntu.mirror.cambrium.nl/ubuntu/ hardy main universe 通常rar命令由一个主命令加若干选项（可选）构成，操作文档为操作施加的.rar文件对象，  文件或文件列表为对操作文档实现修饰的具体文件或目录（可选）。  ------------------------------------------------------------------------  rar常用命令主要有  a 添加文件到操作文档  例:rar a test.rar file1.txt 若test.rar文件不存在，则打包file1.txt文件成test.rar 例:rar a test.rar file2.txt 若test.rar文件已经存在，则添加file2.txt文件到test.rar中  (这样test.rar中就有两个文件了）  注，如果操作文档中已有某文件的一份拷贝，则a命令更新该文件，对目录也可以进行操作  例:rar a test.rar dir1  c 对操作文档添加说明注释  rar c test.rar  （会出现Reading comment from stdin字样，然后输入一行或多行注释，以ctrl+d结束）  cf 添加文件注释，类似上面的c，不过这个是对压缩文档中每个文件进行注释  cw 将文档注释写入文件  例:rar cw test.rar comment.txt  d 从文档中删除文件  例:rar d test.rar file1.txt  e 将文件解压到当前目录  例:rar e test.rar  注:用e解压的话，不仅原来的file1.txt和file2.txt被解压到当前目录，就连dir1里面的所有文件  也被解压到当前目录下，不能保持压缩前的目录结构，如果想保持压缩前的目录结构，用x解压  k 锁定文档  例:rar k test.rar 锁定文档后，该文档就无法进行任何更新操作了  r 修复文档  例:rar r test.rar  当rar文件有问题时，可以尝试用该命令进行修复（鬼知道有多少用）  s 转换文档成自解压文档  例:rar s test.rar  会生成一个test.sfx的可执行文档，运行它的效果就相当于rar x test.rar，  适合于向没有rar的用户传输文件  t 检测文档  例:rar t test.rar  检测test.rar的完整性，一般压缩完大型文件准备传输前最好用这个命令来确保文件的正确性  x 带路径解压文档中内容到当前目录  例:rar x test.rar  这样解压的话，dir1就会保持原来的目录结构  以上就是rar的常用命令，一个rar操作只能有一个命令，而选项却可以有多个。  ------------------------------------------------------------------------  rar选项有很多，在此无法一一说明，只示范经常使用的几个  cl 将文件名转换为小写  cu 将文件名转换为大写  例:rar a -cl test.rar FILe.txt  FILe.txt在添加进test.rar之后，变为file.txt  df 文档操作后删除源文件  例:rar a -df test.rar file1.txt file2.txt dir1  将file1.txt,file2.txt,dir1压缩到test.rar中之后，删除源文件  ed 不添加空目录  例:rar a -ed test.rar dir1  添加dir1到test.rar中时，不对空目录进行操作  rar e -ed test.rar  解压test.rar时，不生成空目录  k 锁定文件  例:rar a -k test.rar file1.txt  等价于rar a test.rar file1.txt  rar k test.rar  m<0..5> 设定压缩比等级（0-存储，3-默认，5-最大）  例:rar a -m0 test.rar dir1 dir2  将dir1,dir2打包存储到test.rar，不进行实质上的压缩（速度奇快，适合于对无甚可压的文件进行操作  比如avi，jpg等）  rar a -m5 test.rar .txt .bmp  将当前目录下的txt文件和bmp文件打包压缩到test.rar中，使用最大压缩比（最慢）  ms[ext;ext] 特定文件采用非压缩方式  例:rar a -m5 -ms avi;jpg;jpeg test.rar /home  将home目录下所有目录和文件归档到test.rar，采用最大压缩，但avi,jpg,jpeg文件不进行压缩  （只是打包进test.rar，因为这些文件即使用最大压缩也压不了多少，不如直接打包节省时间）  o+ 覆盖已有文件  o- 不覆盖已有文件  例:rar x -o- test.rar  解压test.rar文件，但是如果碰到以存在的文件则不覆盖  ol 将符号链接以链接文件保存，而不是普通文件  ow 保存或者恢复文件所有者的信息（username,group)  这两个是nix系统特有的命令，很容易理解吧  ------------------------------------------------------------------------  p[password]   设定密码  例:rar a test.rar .txt -p prettygirl  压缩文件设定密码为prettygirl，解压时无密码无法进行操作  如果觉得明码密码太过暴露，可以使用  rar a test.rar *.txt -p  则rar程序会询问你要使用什么密码，不回显  s- 不使用固实压缩  注，固实压缩就是压缩后文档内容不可变更的压缩方式，这和lock不一样。因为使用普通压缩  要照顾以后的插入删除个别文件的需要，就要留下很多操作余地。而固实压缩则不可以对  其内容进行任何更新，所以压缩比是最大的。  sfx[name] 创建自解压文件，这和先用a进行压缩，再用s转换效果是一样的。  t 压缩完毕后进行完整性检验  例:rar a test.rar /home -t  压缩完毕后进行检验，如果有问题则报错。  ta 仅对data日期后文件进行操作  tb 仅对data日期前文件进行操作  注，date的格式为 YYYYMMDDHHMMSS 这样。  v[k,b] 分卷压缩，每卷大小由后面的size指定  例:rar a -v15000k -m0 test xvid-fn.avi  对xvid-fn.avi进行打包存储，每卷大小15000k（这种格式在网上发布dvdrip时很流行）  生成的文件名为test.part1.rar,test.part2.rar….(rar 3.20版）  x 排除特定的文件  例:rar x test.rar -x .txt  解压test.rar中除.txt以外的文档  x@ 同上，不过这次所有排除的文件放在list文件列表中  y 所有操作均回答yes  例如有时解压时每碰到相同文件就问是否覆盖(Y/N)，加上-y就可以默认选择Yes，不再询问 JDK的安装 在下载的时候有几种文件格式可供选择 bin rpm 源码 （实际上bin也是先解压出rpm，然后使用rpm自动安装的） 使用bin安装以后，需要到.profile文件中设置一下  export JAVA_HOME=/jdk安装目录 export PATH=$JAVA_HOME/bin:$PATH export classpath=$JAVA_HOME/lib:./ ubuntu默认安装有open-java,为了默认使用我们安装的jdk需要进行以下操作步骤： update-alternatives  --install  /usr/bin/java  java  jdk的安装路径/bin/java  300 update-alternatives  --install  /usr/bin/javac  java  jdk的安装路径/bin/javac  300 通过这一步我们将安装的jdk加入java选单，然后执行： update-alternatives --config java  这样会有一个备选表单出现，选择后来安装的java文件即可。 七. linux下安装tomcat    下载tomcat的linux版本并进行解压 进入到bin目录 ./startup.sh启动 强烈注意，linux下的tomcat是一个守护进程，不会像在windos下边那样启动一个tomcat的界面。 八.linux下安装myeclipse后在myeclipse中安装svn时会报错    我们需要安装 sudo apt-get install libsvn-java 并在安装myeclipse的目录下修改myeclipse.ini文件，在“-vmargs”之后增加     -Djava.library.path=/usr/share/java/    -Djava.library.path=/usr/bin/jni/ 重启myeclipse即可。 九.linux 下安装Jboss常见问题  现在用run.sh虽然可以让server跑起来,但是我用我本机连http://172.12.12.12:8080,无法显示页面,原因是server的jboss要被本机以外的电脑连需要设置jboss.bind.address,我新建了一个脚本 start.sh,内容为:  ./run.sh -Djboss.bind.address=172.30.149.48 -b 0.0.0.0 &  jboss版本不一样,设置不一样,4.2版本必须跟上面一样配置.（配置说明, 172.30.149.48为对外提供服务的IP地址, -b 0.0.0.0表示对所有请求此server的Ip都有权限.）  最近在Redhat9.2中配置安装JBOSS-4.2.0.GA，原以为那时比较简单的事情，没有想到，启动开通访问 http://192.168.0.5:8080/总是访问不到 使用netstat -an 查看JBOSS的服务启动为： 127.0.0.1:8080，表面看起来没有错误 [root@MT root]# ifconfig eth0      Link encap:Ethernet  HWaddr 00:0C:29:6B:4B:84           inet addr:192.168.0.5  Bcast:192.168.0.255  Mask:255.255.255.0           UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1           RX packets:512 errors:0 dropped:0 overruns:0 frame:0           TX packets:620 errors:0 dropped:0 overruns:0 carrier:0           collisions:0 txqueuelen:100           RX bytes:40830 (39.8 Kb)  TX bytes:417015 (407.2 Kb)           Interrupt:10 Base address:0x1080 lo        Link encap:Local Loopback           inet addr:127.0.0.1  Mask:255.0.0.0           UP LOOPBACK RUNNING  MTU:16436  Metric:1           RX packets:6035 errors:0 dropped:0 overruns:0 frame:0           TX packets:6035 errors:0 dropped:0 overruns:0 carrier:0           collisions:0 txqueuelen:0           RX bytes:175858 (171.7 Kb)  TX bytes:175858 (171.7 Kb) 这个问题困了我好几天，一直没有时间解决它，后来我在查看配置文件 jboss_init_redhat.sh，突然看到： JBOSS_BIND_ADDR=${JBOSS_HOST:+\"-b $JBOSS_HOST\"} 那是不是可以把JBOSS_HOST的地址HARD CORDE为：192.168.0.5 果然，想法正确，并增加自动启动功能，具体步骤如下： 1.  增加jboss用户： groupadd -g 200 jboss useradd -u 200 -g jboss jboss 2.安装JDK和JBOSS [root@MT bin]# env |grep -i java PATH=/usr/java/jdk1.5.0_10/bin:/usr/java/jdk1.5.0_10/jre/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin /usr/local/jboss-4.2.0.GA/bin:/root/bin JAVA_HOME=/usr/java/jdk1.5.0_10 [root@MT bin]# env |grep -i jboss JBOSS_HOME=/usr/local/jboss-4.2.0.GA PATH=/usr/java/jdk1.5.0_10/bin:/usr/java/jdk1.5.0_10/jre/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin /usr/local/jboss-4.2.0.GA/bin:/root/bin PWD=/usr/local/jboss-4.2.0.GA/bin JBOSS_HOST=192.168.0.5 OLDPWD=/usr/local/jboss-4.2.0.GA PWD=/usr/local/jboss-4.2.0.GA/bin 3.复制JBoss4自带的启动文件到/etc/init.d下 [root@MT bin]#cp $JBOSS_HOME/bin/jboss_init_redhat.sh  /etc/init.d/ 4.设置启动脚步 [root@MT bin]# ln –s /etc/init.d/jboss_init_redhat.sh /etc/rc3.d/K20jboss_init_redhat [root@MT bin]# ln –s /etc/init.d/jboss_init_redhat.sh /etc/rc3.d/S80jboss_init_redhat [root@MT bin]# ln –s /etc/init.d/jboss_init_redhat.sh /etc/rc5.d/K20jboss_init_redhat [root@MT bin]# ln –s /etc/init.d/jboss_init_redhat.sh /etc/rc5.d/S80jboss_init_redhat [root@MT bin]# chmod –f 777 /etc/init.d/jboss_init_redhat.sh [root@MT bin]# chmod –f 777 /etc/rc3.d/S80jboss_init_redhat.sh [root@MT bin]# chmod –Rf 777 $JBOSS_HOME 5.编辑/etc/init.d/jboss_init_redhat.sh文件（注意修改和增加内容） # # # # # 增加： JBOSS_HOST=${JBOSS_HOST:-\"192.168.0.5\"} 修改： JBOSS_HOME=${JBOSS_HOME:-\"/usr/local/jboss-4.2.0.GA\"} JBOSS_USER=${JBOSS_USER:-\"jboss\"} 修改： JAVAPTH=${JAVAPTH:-\"/usr/java/jdk1.5.0_10/bin\"} JBOSS_CONF=${JBOSS_CONF:-\"default\"} JBOSS_BIND_ADDR=${JBOSS_HOST:+\"-b $JBOSS_HOST\"} JBOSSCP=${JBOSSCP:-\"$JBOSS_HOME/bin/shutdown.jar:$JBOSS_HOME/client/jnet.jar\"} JBOSSSH=${JBOSSSH:-\"$JBOSS_HOME/bin/run.sh -c $JBOSS_CONF $JBOSS_BIND_ADDR\"} 十.linux下安装svn Svn(subversion) is used to maintain current and historical versions of files such as source code, web pages, and documentation. Its goal is to be a mostly-compatible successor to the widely used Concurrent Versions System (CVS). It is very easy to install subversion client on linux OS using yum. You can us following command to install subversion client. root@server [~]# yum install subversion while installing subversion if you are getting following error  then it seem sot be perl-URI package is not installed on your server so you will have to install first before installing subversion client. Please follow the following steps to install perl-URI package You’ll login via SSH as root and run this command: root@server [~]# yum install subversion and then you may get this error: Error: Missing Dependency: perl(URI) >= 1.17 is needed by package subversion Here’s what you do next (copy/paste): root@server [~]# wget  ftp://ftp.pbone.net/mirror/archive.fedoraproject.org/ fedora/linux/releases/7/Everything/i386/os/Fedora/ perl-URI-1.35-3.noarch.rpm root@server [~]# rpm -i perl-URI-1.35-3.noarch.rpm root@server [~]# yum install subversion Installed: subversion.x86_64 0:1.4.2-4.el5 subversion.i386 0:1.4.2-4.el5 Dependency Installed: neon.x86_64 0:0.25.5-10.el5 neon.i386 0:0.25.5-10.el5 Complete! That’s it subversion client is successfully installed on your server you can check it using following command. root@server [~]#svn --version svn, version 1.1.4 (r13838) compiled Aug 21 2005, 20:56:55 Copyright (C) 2000-2004 CollabNet. Subversion is open source software, see http://subversion.tigris.org/ This product includes software developed by CollabNet (http://www.Collab.Net/). The following repository access (RA) modules are available: 十一.Linux下安装apache，php服务 安装步骤：  1 下载XAMPP for linux： http://www.apachefriends.org/download.php?xampp-linux-1.4.15.tar.gz  2 安装：下载后简单的输入以下命令即可轻松搞定：  1. 进入linux终端并且用root登陆（系统会提示输入root密码）:  su  2. 将下载的档案文件解压到/opt下：  tar xvfz xampp-linux-1.4.15.tar.gz -C /opt  警告1：请不要用Microsoft Windows工具对档案文件解压，这样会导致起非正常工作  警告2：已经安装过Xampp的用户此命令将覆盖原有版本  自此xampp已经安装到/opt/lampp目录中  3 启动xampp：  启动xampp很简单：）输入以下命令：  /opt/lampp/lampp start  你将在你的终端中看见类似下面的提示  Starting XAMPP 1.4.15...  LAMPP: Starting Apache...  LAMPP: Starting MySQL...  LAMPP started.  好了。apache mysql运行了：）是不是很easy阿。  如果您在安装过程中得到错误信息请查阅 Linux FAQ  请问apache中在哪个目录存放主页啊?如果是多个网站该如何设置 谁有相关apache文档,能给一份吗? rual 发表于 2003-10-16 15:40 请问apache中在哪个目录存放主页啊?如果是多个网站该如何设置 apache中存放主页，你可以自己设定 httpd.conf中的 DocumentRoot。 比如你可以把DocumentRoot改成  /home/test/ 如果是windows 就可以改成 c:/htdocs/ 设置多个网站， 你可以在httpd.conf 中 最后一段 可以看到 VirtualHost  他底下有 sample, 自己看一下就会了。 如果还是有问题，继续顶铁子吧！ cyberlee 发表于 2003-10-26 01:36 请问apache中在哪个目录存放主页啊?如果是多个网站该如何设置 Linux下缺省是放在/var/www/html下面的 可以在/etc/httpd/conf/httpd.conf中修改的 十二.discuz安装过程 本教程讲解的全新安装 Discuz! 7.2 的方法（以虚拟空间上安装 Discuz! 7.2 为例演示）。安装 Discuz! 7.2 前请确保是否已经安装好了 UCenter 1.5，参考教程如下： UCenter 1.5 安装图文教程：http://faq.comsenz.com/viewnews-449 UCenter 1.5 安装视频教程：http://faq.comsenz.com/viewnews-494 如果您之前没有安装过 UCenter 1.5 可以直接下载 Discuz_7.2_FULL 版本一次性安装 UCenter 1.5 + Discuz! 7.2，这里可以根据您的具体需要选择版本，下面我们演示已经安装过UCenter 1.5 全新安装 Discuz! 7.2 的方法。 一、下载适合自己 Discuz! 7.2 版本到本地或服务器 下载地址：http://www.comsenz.com/downloads/install/discuz 说明：官方提供了 4 种不同的编码。包括 GBK 简体中文版(推荐)、UTF-8 简体中文版、BIG5 繁体中文版(推荐)、UTF-8 繁体中文版。如果您的站点主要是国内会员，推荐您使用 GBK 版本。 二、解压并上传论坛程序到服务器且修改相应目录权限 1、上传论坛程序到服务器上 本次演示以 GBK 字符集版本为例（其他字符集版本的也参照此教程方法来安装），解压缩得到如下图所示的三个文件夹： upload 这个目录下面的所有文件是我们需要上传到服务器上的可用程序文件； readme 目录为产品介绍、授权、安装、升级、转换以及版本更新日志说明； utilities 目录为论坛附带工具，包括升级程序和 Tools 工具箱。 将其中 upload 目录下的所有文件使用 FTP 软件以二进制方式（常见 FTP 软件二进制的设置方法http://faq.comsenz.com/viewnews-373）上传到空间（以下截图中使用的 FTP 软件为 FlashFXP，有关此工具的使用教程详见：FTP 使用教程），如下图所示： 2、设置相关目录的文件属性，以便数据文件可以被程序正确读写 使用 FTP 软件登录您的服务器，将服务器上以下目录、以及该目录下面的所有文件的属性设置为 777，Win 主机请设置 internet 来宾帐户可读写属性。 ./config.inc.php ./attachments ./forumdata ./forumdata/cache ./forumdata/templates ./forumdata/threadcaches ./forumdata/logs ./uc_client/data/cache 关于目录权限修改可以参考：http://faq.comsenz.com/viewnews-183 三、安装过程 上传完毕后，开始在浏览器中安装 Discuz! 7.2 ，登录 UCenter 1.5 => 应用管理 => 添加新应用 => URL 安装 (推荐)： 用你的网站域名替换“应用程序安装地址”中的 “http://domainname”部分，然后点击“安装”进入准备安装界面： 阅读授权协议后点击“我同意”，系统会自动检查环境及文件目录权限，如下图所示： 检测成功，点击“下一步”，即进入检测服务器环境以及设置 UCenter 界面，如下图所示： 这里会自动获取 UCenter 信息，所以无需手动配置，直接点击“下一步”进入数据库信息配置界面： 填写好 Discuz! 数据库信息及管理员信息后，点击“下一步”，系统会自动安装数据库直至完毕，如下图所示： 安装成功后，点击“进入下一步填写联系方式”，会出现如下的界面： 填写好联系方式后点击“提交”，也可以点击“跳过本步”直接完成安装。 安装完毕后进入 Discuz! 7.2 首页查看网站： 至此，Discuz! 7.2 已经成功地安装完毕！您可以登录 Discuz! 7.2 站点并开始设置了。 第一次安装discuz，安装成功后跳到首页，报如下错误： Error:Table 'ucenter.uc_pms' doesn't exist Errno:1146 SQL::SELECT count(*) FROM ucenter.uc_pms WHERE (related='0' AND msgfromid>'0' OR msgfromid='0') AND msgtoid='0' AND folder='inbox' AND new='1' 查了下 ，数据库ucenter里没有uc_pms表。  经过搜索，在一篇帖子里提到的方法新建这个表： DROP TABLE IF EXISTS uc_pms; CREATE TABLE uc_pms ( pmid int(10) unsigned NOT NULL auto_increment, msgfrom varchar(15) NOT NULL default '', msgfromid mediumint(8) unsigned NOT NULL default '0', msgtoid mediumint(8) unsigned NOT NULL default '0', folder enum('inbox','outbox') NOT NULL default 'inbox', new tinyint(1) NOT NULL default '0', subject varchar(75) NOT NULL default '', dateline int(10) unsigned NOT NULL default '0', message text NOT NULL, delstatus tinyint(1) unsigned NOT NULL default '0', related int(10) unsigned NOT NULL default '0', PRIMARY KEY(pmid), KEY msgtoid(msgtoid,folder,dateline), KEY msgfromid(msgfromid,folder,dateline), KEY related (related), KEY getnum (msgtoid,folder,delstatus) ) "},{"title":"如何彻底卸载mysql","url":"/all/web/database/mysql/2014/04/24/uninstall-mysql-totaly.cm.html","date":"2014-04-24 00:00:00 +0800","categories":["all","web","database","mysql"],"body":"如何彻底删除mysql 1.首先在windows服务中将mysql服务删掉，使用命令 sc delete mysql 2.在控制面板中卸载掉mysql。 3.清理mysql安装目录的ini文件。 4.清理注册表： HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\Eventlog\\Application\\MySQL 目录删除 HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet002\\Services\\Eventlog\\Application\\MySQL 目录删除 HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Eventlog\\Application\\MySQL 目录删除（我卸载的时候没有找到，略过后仍达到完全卸载的目的。） 5.有一些mysql的数据文件也必须删除干净，比如说：C:\\Documents and Settings\\All Users\\Application Data\\MySQL 6.重启电脑。重新安装即可。"},{"title":"wget参数详解","url":"/all/web/linux/2014/04/24/wget-params-man.html","date":"2014-04-24 00:00:00 +0800","categories":["all","web","linux"],"body":"wget是一个从网络上自动下载文件的自由工具。它支持HTTP,HTTPS和FTP协议,可以使用HTTP代 理. 所谓的自动下载是指,wget可以在用户退出系统的之后在后台执行。这意味这你可以登录系统, 启动一个wget下载任务,然后退出系统,wget将在后台执行直到任务完成,相对于其它大部分浏 览器在下载大量数据时需要用户一直的参与,这省去了极大的麻烦。 wget 可以跟踪HTML页面上的链接依次下载来创建远程服务器的本地版本,完全重建原始站点的目 录结构。这又常被称作\"递归下载\"。在递归下载的时候,wget 遵循Robot Exclusion标准 (/robots.txt). wget可以在下载的同时,将链接转换成指向本地文件,以方便离线浏览。 wget 非常稳定,它在带宽很窄的情况下和不稳定网络中有很强的适应性.如果是由于网络的原因下 载失败,wget会不断的尝试,直到整个文件下载完毕。如果是服务 器打断下载过程,它会再次联 到服务器上从停止的地方继续下载。这对从那些限定了链接时间的服务器上下载大文件非常有 用。 wget的常见用法 wget虽然功能强大,但是使用起来还是比较简单的 基本的语法是:wget [参数列表] \"URL\" 用\"\"引起来可以避免因URL中有特殊字符造成的下载出错。 下面就结合具体的例子来说明一下wget的用法。 1. 下载整个http或者ftp站点。 断点续传。  当文件特别大或者网络特别慢的时候,往往一个文件还没有下载完,连接就已经被切断,此 时就需要断点续传。wget的断点续传是自动的,只需要使用-c参数,例如:  wget -c  使用断点续传要求服务器支持断点续传。-t参数表示重试次数,例如需要重试100次,那么就 写-t 100,如果设成-t 0,那么表示无穷次重试,直到连接成功。-T参数表示超时等待时间,例 如-T 120,表示等待120秒连接不上就算超时。 批量下载。  如果有多个文件需要下载,那么可以生成一个文件,把每个文件的URL写一行,例如生成文件 download.txt,然后用命令:wget -i download.txt 这样就会把download.txt里面列出的每个URL都下载下来。(如果列的是文件就下载文件,如果列 的是网站,那么下载首页) 选择性的下载。  可以指定让wget只下载一类文件,或者不下载什么文件。例如:  wget -m --reject=gif http://target.web.site/subdirectory 表示下载http://target.web.site/subdirectory,但是忽略gif文件。--accept=LIST 可以  接受的文件类型,--reject=LIST拒绝接受的文件类型。 密码和认证。  wget只能处理利用用户名/密码方式限制访问的网站,可以利用两个参数: --http-user=USER设置HTTP用户 --http-passwd=PASS设置HTTP密码 对于需要证书做认证的网站,就只能利用其他下载工具了,例如curl。 利用代理服务器进行下载。  如果用户的网络需要经过代理服务器,那么可以让wget通过代理服务器进行文件的下载。此 时需要在当前用户的目录下创建一个.wgetrc文件。文件中可以设置代理服务器:  http-proxy = 111.111.111.111:8080  ftp-proxy = 111.111.111.111:8080  分别表示http的代理服务器和ftp的代理服务器。如果代理服务器需要密码则使用:  --proxy-user=USER设置代理用户  --proxy-passwd=PASS设置代理密码  这两个参数。  使用参数--proxy=on/off 使用或者关闭代理。 wget还有很多有用的功能,需要用户去挖掘。 wget的使用格式 Usage: wget [OPTION]... [URL]... 用wget做站点镜像:   wget -r -p -np -k http://dsec.pku.edu.cn/~usr_name/   或者   wget -m http://dsec.pku.edu.cn/~usr_name/   wget --mirror –w 2 –p --HTML-extension –-convert-links – P ~\\wget_files\\example1 http://www.yourdomain.com   --mirror(-m):指定要做镜像的网站。wget会获取网站的所有链接和相关的文件。如果 本地镜像存在,还会自动覆盖最近的更新。   -w:告诉wget每个请求的间隔时间,这里是2秒。这个不是必需的,当有些站点对请求 间隔有限制时,这个参数就非常有用了。   -p:让wget获取页面上的所有元素,使其能在本地浏览。--mirror参数并不会保证所有的 图片及相关文件都被下载,所以需要加上-p来指定。   --HTML-extension:将所有不是html扩展名的文件都转换成.html。这个参数会 把CGI,ASP,PHP等结尾的文件都转换成html结尾。   -P(prefix folder):指定目标文件夹。 在不稳定的网络上下载一个部分下载的文件,以及在空闲时段下载 wget -t 0 -w 31 -c http://dsec.pku.edu.cn/BBC.avi -o down.log &   或者从filelist读入要下载的文件列表   wget -t 0 -w 31 -c -B ftp://dsec.pku.edu.cn/linuxsoft -i filelist.txt -o down.log &   上面的代码还可以用来在网络比较空闲的时段进行下载。我的用法是:在mozilla中将不方便当时 下载的URL链接拷贝到内存中然后粘贴到文件filelist.txt中,在晚上要出去系统前执行上面代码 的第二条。 使用代理下载   wget -Y on -p -k https://sourceforge.net/projects/wvware/   代理可以在环境变量或wgetrc文件中设定   在环境变量中设定代理   export PROXY=http://211.90.168.94:8080/ # 在~/.wgetrc中设定代理   http_proxy =   ftp_proxy = http://proxy.yoyodyne.com:18023/ wget各种选项分类列表 * 启动"},{"title":"chrome插件switchysharp options备份","url":"/all/web/2014/04/25/chrome-extension-switchysharp.html","date":"2014-04-25 00:00:00 +0800","categories":["all","web"],"body":"在import选项中选择 resotre from online 输入： http://materliu.github.com/attachments/2014-04-252-2014-04-25-SwitchyOptions.bak"},{"title":"cookie作用域，用户隐私信息","url":"/all/web/2014/04/27/cookie.html","date":"2014-04-27 00:00:00 +0800","categories":["all","web"],"body":"cookies作用域：即cookie的domain属性，作用为约束子域是否可以共享主域的Cookies，公司cookies作用域通常为qq.com 用户隐私：用户的个人信息，包括明文、加密、内部编码等存储形式，包括但不限于以下信息： －能唯一标识用户的信息， 如用户账号、密码、邮箱、手机号等 －与用户相关的信息， 如用户性别、年龄段、月收入、地域等 －用户的上网行为记录， 如搜索关系词、浏览的页面、上网时长、收藏的商品等 －用户机器的硬件信息，如CPU参数、内存参数、硬盘参数等 －等等 这里详细讲一下cookie的作用域： 如何让不同子域共享一份cookie呢？ 网上有个小哥写的一段挺好： so you are using cookies on your website, but when a visitor visits www.yourdomain.com and yourdomain.com the cookie doesn’t get set across both! That is because in essence, www. is simply a subdomain. The “www” component is not a protocol, it is not necessary, instead all it is, is just a marketing ploy. But anyway. Here is what you would do normally: setcookie('YourCookieName', 'Some Values', time() + 3600, '/', 'mydomain.com'); Damn! Almost there! The part you are missing to add a cookie irrespective of the subdomain is “.mydomain.com”. Yep, just add a . infront of your domain name. So you would have: setcookie('YourCookieName', 'Some Values', time() + 3600, '/', '.mydomain.com'); All done ^^ Enjoy 翻译过来举例说明： 你如果想要 find.qq.com 和 qzone.qq.com 都能使用到qq.com下的cookie， 在种cookie的时候一定要在作用域的地方添加上 .qq.com 而不是 qq.com 但是： 注意但是： 看另一个小哥写的一段: For clarity, mydomain.com and subdomain.domain.com can only share cookies if the domain is explicitly named in the Set-Cookie header. Otherwise, the cookie domain defaults to the request host. For instance, if you sent the following header from subdomain.mydomain.com: Set-Cookie: name=value Then the cookie won't be sent for requests to mydomain.com. However if you use the following, it will be usable on both domains: Set-Cookie: name=value;domain=mydomain.com In RFC 2109, a domain without a leading dot meant that it could not be used on subdomains, and only a leading dot (.mydomain.com) would allow it to be used across subdomains. However, modern browsers respect the newer specification RFC 6265, and will ignore any leading dot, meaning you can use the cookie on subdomains as well as the top-level domain. In summary, if you set a cookie like the second example above from mydomain.com, it would be accessible by subdomain.mydomain.com, and vice versa. See also: www vs no-www and cookies"},{"title":"前端安全，xss测试用例","url":"/all/web/2014/04/27/xss.html","date":"2014-04-27 00:00:00 +0800","categories":["all","web"],"body":"xss测试用例文件下载"},{"title":"修改npm的镜像地址","url":"/all/web/2014/04/28/change-npm-registry.html","date":"2014-04-28 00:00:00 +0800","categories":["all","web"],"body":"有些同学的网络环境可能比较复杂，直接安装或者更新npm官方的包往往不能成功，这时候可以考虑切换镜像地址来实现。 推荐镜像地址： http://registry.npmjs.vitecho.com 几种使用方式： 临时使用 npm --registry \"http://registry.npmjs.vitecho.com\" install express 长期修改镜像地址 npm config set registry \"http://registry.npmjs.vitecho.com\" 或者直接打开配置文件手动编辑 npm config edit 在打开的文件中直接添加  registry = http://registry.npmjs.vitecho.com"},{"title":"Compile-make-build的区别","url":"/all/web/2014/04/28/comile-make-build-difference.html","date":"2014-04-28 00:00:00 +0800","categories":["all","web"],"body":"Compile、Make和Build的区别   针对Java的开发工具，一般都有Compile、Make和Build三个菜单项，完成的功能的都差不多，但是又有区别。   编译，是将源代码转换为可执行代码的过程。编译需要指定源文件和编译输出的文件路径（输出目录）。Java的编译会将java编译为class文件，将非java的文件（一般成为资源文件、比如图片、xml、txt、poperties等文件）原封不动的复制到编译输出目录，并保持源文件夹的目录层次关系。   在Java的集成开发环境中，比如Eclipse、IDEA中，有常常有三种与编译相关的选项Compile、Make、Build三个选项。这三个选项最基本的功能都是完成编译过程。但又有很大的区别，区别如下： 1、Compile：只编译选定的目标，不管之前是否已经编译过。   2、Make：编译选定的目标，但是Make只编译上次编译变化过的文件，减少重复劳动，节省时间。（具体怎么检查未变化，这个就不用考虑了，IDE自己内部会搞定这些的）   3、Build：是对整个工程进行彻底的重新编译，而不管是否已经编译过。Build过程往往会生成发布包，这个具体要看对IDE的配置了，Build在实际中应用很少，因为开发时候基本上不用，发布生产时候一般都用ANT等工具来发布。Build因为要全部编译，还要执行打包等额外工作，因此时间较长。"},{"title":"用fiddler模拟网络请求超时","url":"/all/web/2014/04/28/fiddler-timeout.html","date":"2014-04-28 00:00:00 +0800","categories":["all","web"],"body":"用fiddler模拟网络请求超时 最近要测试程序对cgi 请求超时的兼容，所以就需要模拟超时，第一个想到的就是fiddler工具，说一下具体的做法： Rules -> Customize Rules 搜索内容 \"oSession[\"response-trickle-delay\"]\" ，修改一下这里就行了. 把它的值设为10000，这样就一定能够引起超时了，保存文件。这里的值本来是150. Rules -> Performance -> Simulate Modem Speeds 勾选 直接在fiddler命令行输入 bpafter http://needstopurl  直接阻塞对应url的返回也可。"},{"title":"javascript_error_type","url":"/all/web/2014/04/28/javascript_error_type.html","date":"2014-04-28 00:00:00 +0800","categories":["all","web"],"body":"Error Base type for all errors. Never actually thrown by the engine. EvalError Thrown when an error occurs during execution of code via eval(). RangeError Thrown when a number is outside the bounds of its range—for example, trying to create an array with –20 items (new Array(-20)). These errors rarely occur during normal execution. ReferenceError Thrown when an object is expected but not available—for instance, trying to call a method on a null reference. SyntaxError Thrown when the code passed into eval() has a syntax error. TypeError Thrown when a variable is of an unexpected type—for example, new 10or \"prop\" in true. URIError Thrown when an incorrectly formatted URI string is passed intoencodeURI, encodeURIComponent, decodeURI, ordecodeURIComponent."},{"title":"解释一下webstorm的code style配置项","url":"/all/web/2014/04/28/webstorm-codestyle.html","date":"2014-04-28 00:00:00 +0800","categories":["all","web"],"body":"最近组内在打造统一的代码风格，每个人都自觉的按照规范文档给自己的偏好编辑器配上一配，我一直在用webstorm，ctrl + alt + s 打开webstorm的settings。 Project settings 下边的第一项就是code style。往下看IDE settings却找不到code style，所以就心生纳闷，难道 webstorm不支持global 的code style ？ 所以就查了一下资料，发现技巧在这里： 打开code style的选项卡，点击general 有一个scheme的选项，学问就出在这里： Project- 指的就是project 级别的 code style（ps：我们习惯称： code convention） 如果你想修改project级别的code style，点击manage，直接用其他的scheme 覆盖project即可。 Global- 除project之外的所以其他的scheme 都会是global生效的，默认是预定义的default（ps：这个scheme是不可更改的，当发生更改时，webstorm会生成一个新的scheme）。"},{"title":"webstorm idea external tools 整合ant","url":"/all/web/2014/04/28/webstorm-external-tools-ant.html","date":"2014-04-28 00:00:00 +0800","categories":["all","web"],"body":"1.Webstorm - settings 2.打开 external-tools 各配置项的含义解释一下： Name：就是添加的工具的名字 Group：就是把它归类到哪一组里边 Descripton: 不多说 Options: 分别表示的意思是： 如果每次运行完这个额外的工具，文件发生了变化，则同步过来。 运行的时候打开webstorm的console 如果这个工具向标准输出输出则把显示内容显示在console里 如果这个工具向标准错误输出则把显示内容显示在console里 Show in： 不多说，就是这个工具显示在webstorm的哪里 Tool settings： program： 找到你本机的ant的安装目录 parameters：一般不需要 working directory： ant的工作目录，这里插入宏，选择当前项目目录 Ok 回到主界面：点击tools： 发现已经多了一个ant 6.点击ant直接运行，前提是你项目的根目录下有 build.xml 文件哦。"},{"title":"不同doctype在不同浏览器下的不同渲染模式，诡异模式","url":"/all/web/2014/05/02/doctype.html","date":"2014-05-02 00:00:00 +0800","categories":["all","web"],"body":"网上有一篇写的非常好的外文，参考地址"},{"title":"创建的file template 在新建文件的列表中没有","url":"/all/web/ideas/2014/05/02/idea-file-template-not-show.html","date":"2014-05-02 00:00:00 +0800","categories":["all","web","ideas"],"body":"已经创建好的file template，在新建文件的列表中却没有，原因有三个： The template is associated with a facet that your module doesn't have. In such a case, you may want to add the corresponding facet to your module. The corresponding file type is inappropriate for the current location. For example, you may be trying to create a Java class outside of Java source or test directory which is not possible. The template you are looking for is a custom template whose file name extension (template extension) does not match registered patterns of any of the recognized file types. In such a case, you may want to register the corresponding pattern for an existing recognized file type or add a new file type and register the corresponding pattern for this new type. For more information, see Creating and Registering File Types. 像我遇到的这种情况就是，把markdown的插件去掉后，创建的jekyll md的模板就不会出现在新建文件的列表中了，原因就是上边的第三条，所以新增一种filetype类型就好了， 具体做法是： Open the IDE Settings by choosing File | Settings | IDE Settings . Then select File Types. Find more on page Accessing the IDE Settings. On the File Types page that opens, click the Add button add. In the New File Type dialog box that opens, specify the name of the new type and optionally provide a description. In the Syntax Highlighting section, specify the characters for line and block comments, hex prefixes, and number postfixes. In the Keywords section, specify sets of keywords using the tabs from 1 to 4 . To do so, select the desired tab, click add (Alt+Insert), and enter the keyword name in the Add New Keyword dialog box that opens. Tip Each set of keywords has its own highlighting. You can change the highlighting color scheme for each set, on the Colors and Fonts settings page. Click the Custom tab and edit the Keyword1, Keyword2, Keyword3, and Keyword4 properties."},{"title":"mac软件安装管理，homebrew","url":"/all/web/osx/2014/05/04/mac-software-management.html","date":"2014-05-04 00:00:00 +0800","categories":["all","web","osx"],"body":"homebrew的官网：http://brew.sh/"},{"title":"编写属于你自己的yeoman generator","url":"/all/web/2014/05/15/yeoman-customization-generator.html","date":"2014-05-15 00:00:00 +0800","categories":["all","web"],"body":"基于webapp-generator 主要做以下改动 去掉任务 autoprefixer, 因为如果需要， sass可以帮忙干这件事情， 不需要的时候就更显得多余 去掉任务 imagemin, 因为大多数人的机器上这个任务都无法正常执行，况且我们可以利用compass来做这件事 去掉任务 cssmin, 因为compass在正式环境代码输出的时候就会压缩代码了 grunt-sass 现在并不成熟， 使用node-sass来编译scss文件， 去掉这个插件的选择，使用更为强大的grunt-contrib-compass 提供我们业务方自定义的404页面 提问用户使用哪种服务器部署， 如果是apache， 生成.htaccess文件， 如果是ngnix， 生成其他对应的文件。 对应生成 config.rb 自动连接上一条中的grunt-contrib-compass package.json 改为4个空格缩进的code-styles! 提供是否选用 jquery的选项， 根据是否选用了jquery来生成不同的base.js文件， 不选用requirejs组织js代码的方式， 采用最原始的拼接形式。 提供选项， 是否使用 handlerbars 模板 base.js 中提供CONFIG配置项， 根据自动化脚本自动替换version的值 生成 _font-family.scss 文件， 预存各种页面的常用字体 默认生成的main.scss文件，加入规则, 自动import \"font-family\""},{"title":"使用yeoman创建webapp项目","url":"/all/web/2014/05/15/yeoman-webapp-generator.html","date":"2014-05-15 00:00:00 +0800","categories":["all","web"],"body":"使用前，首先更新自己本地的yeoman and bower, webapp-generator exec yo webapp, if error occurs, try to upgrade your node by brew update && brew upgrade node, here I upgrade to node 0.10.28 运行grunt提示： Warning: PhantomJs timed out, possibly due to a missing Mocha run() call 所以我首先考虑是否本地 PhantomJs 没有安装， 使用 brew update && brew install phantomjs, 提示已安装 查看项目目录发现是yo webapp 没有自动生成 test 测试相关的代码， 从其他项目之前生成的代码拷贝了一个 test 目录放进来就好了 自动生成 grunt-localhost 配置 grunt-proxy 配置， grunt-upload-zip配置 询问用户的项目url地址，cdn地址，cgi地址测试环境 自动加入  grunt-cdn  利用4中询问到的信息进行有效填充。"},{"title":"如何在不提交form的情况下使用浏览器自带的html5的错误提示消息","url":"/all/web/2014/05/20/forms-validation.html","date":"2014-05-20 00:00:00 +0800","categories":["all","web"],"body":"具体的示例代码可以参考我 testcase 项目中 http://localhost:9000/form-user-interface.html 中 doCustomValidate 中的写法。 说透了就是： 如果想触发浏览器自带的html5错误消息提示，就必须触发form的提交事件， To check whether a certain field is valid, use: To check if the form is valid, use: If you want to display the native error messages that some browsers have (such as Chrome), unfortunately the only way to do that is by submitting the form, like this:"},{"title":"ios下强制弹出键盘","url":"/all/web/mobile/2014/05/26/ios-mobile-web-force-keyboard.html","date":"2014-05-26 00:00:00 +0800","categories":["all","web","mobile"],"body":"ios无法使输入框获取焦点, 并弹出键盘的初步结论: 直接原因: ios为了可用性(无障碍), 以及防止未经用户同意, 擅自弹起键盘的情况, 禁止web中使用脚本弹出键盘 可尝试的解决方案: 将webview的keyboardDisplayRequiresUserAction属性设为\"NO\", 允许web可不经用户交互(点击), 即可弹出键盘 web实现一个\"输入\"按钮, 用户点击按钮后即可使输入框获取焦点, 弹出键盘"},{"title":"url长度限制","url":"/all/web/2014/05/26/url-length-limitation.html","date":"2014-05-26 00:00:00 +0800","categories":["all","web"],"body":"由于之前的一个web项目中，要用get方法去获取数据，但结果时常报错，经过仔细排查才发现原来url长度超过了限制，通过缩短url和发送多次请求的方法解决了该问题，之后在网上查了些资料，发现这个问题还是内藏玄机，要比自己想的复杂。 首先，其实http 1.1 协议中对url的长度是不受限制的，协议原文： The HTTP protocol does not place any a priori limit on the length of a URI. Servers MUST be able to handle the URI of any resource they serve, and SHOULD be able to handle URIs of unbounded length if they provide GET-based forms that could generate such URIs. A server SHOULD return 414 (Request-URI Too Long) status if a URI is longer than the server can handle (see section 10.4.15). Note: Servers ought to be cautious about depending on URI lengths above 255 bytes, because some older client or proxyimplementations might not properly support these lengths. 翻译： HTTP协议不对URI的长度作事先的限制，服务器必须能够处理任何他们提供资源的URI，并且应该能够处理无限长度的URIs，这种无效长度的URL可能会在客户端以基于GET方式的请求时产生。如果服务器不能处理太长的URI的时候，服务器应该返回414状态码（此状态码代表Request-URI太长）。 注:服务器在依赖大于255字节的URI时应谨慎，因为一些旧的客户或代理实现可能不支持这些长度。 虽然协议中未明确对url进行长度限制，但在真正实现中，url的长度还是受到限制的，一是服务器端的限制，二就是游览器端的限制。 一、服务器端 在服务器端，主要是apache，jboss和nginx等，我在网上找到的调节方法可以参加下文：关于http请求url长度以及请求消息体长度的研究（一）（服务器端） 1.1 nginx 由于现在项目中主要用到nginx，所以强调下它的设置参数：large_client_header_buffers 该参数对nginx服务器接受客户端请求的头信息时所分配的最大缓冲区的大小做了限制，也就是nginx服务器一次接受一个客户端请求可就收的最大头信息大小。这个头不仅包含 request-line，还包括通用信息头、请求头域、响应头域的长度总和。这也相当程度的限制了url的长度。 nginx服务器默认的限制是4K或者8K，这是根据服务器的硬件配置有关的，一般为内存一页的大小，目前大部分为4K，即4096字节。 1.2 nodejs 这主要是针对nodejs程序员，如不做相关开发可以直接忽略这一节。 nodejs的http服务，设置url长度限制和headers的大小还是相对比较灵活的，我简单实现了控制程序，这里_limit就是url长度的控制器 二、游览器端 游览器的种类繁多，并且对URL的长度限制是有所差异的，具体如下： 游览器   最大长度（字符数）             备注 Internet Explorer   2083        如果超过这个数字，提交按钮没有任何反应 Firefox 65,536 chrome  8182 Safari  80,000 Opera   190,000 curl（linux下指令）    8167 这些数据主要通过网上数据搜索而来，笔者还没有亲自验证过。但都有限制是不争的事实，大家在做开发时要特别注意。"}]}